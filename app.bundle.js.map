{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactRedux\"","webpack:///external \"Redux\"","webpack:///external \"ReactDOM\"","webpack:///./src/console/screen/digits/sa-digital-number.ttf","webpack:///external \"PropTypes\"","webpack:///./src/console/decorate.tsx","webpack:///./src/console/screen/screen-colors.ts","webpack:///./src/console/screen/pixel.tsx","webpack:///./src/console/screen/matrix.tsx","webpack:///./src/specs.ts","webpack:///./src/console/screen/digits/digit.tsx","webpack:///./src/console/screen/life-bar.tsx","webpack:///./src/store/action/actions.ts","webpack:///./src/utils.ts","webpack:///./src/store/action/types-utils.ts","webpack:///./src/store/action/core-actions.ts","webpack:///./src/store/action/keyboard-actions.ts","webpack:///./src/store/action/snake-actions.ts","webpack:///./src/domain/life.ts","webpack:///./src/domain/point.ts","webpack:///./src/domain/enums.ts","webpack:///./src/store/action/tetris-actions.ts","webpack:///./src/store/core/keyboard-epic.ts","webpack:///./src/store/core/core-epic.ts","webpack:///./src/store/graphic/graphic-types.ts","webpack:///./src/store/graphic/graphic-utils.ts","webpack:///./src/store/graphic/graphic-snake.ts","webpack:///./src/store/graphic/graphic-tetris.ts","webpack:///./src/store/graphic/graphic-engine.ts","webpack:///./src/store/graphic/animation-console-start.ts","webpack:///./src/store/graphic/letters.ts","webpack:///./src/store/graphic/animator.ts","webpack:///./src/store/graphic/animation-snake.ts","webpack:///./src/store/graphic/animation-tetris.ts","webpack:///./src/store/graphic/anim.ts","webpack:///./src/store/core/core-state.ts","webpack:///./src/store/core/core-reducer.ts","webpack:///./src/store/core/index.ts","webpack:///./src/store/games/common-epic.ts","webpack:///./src/store/games/snake-epic.ts","webpack:///./src/store/games/tetris-epic.ts","webpack:///./src/store/games/snake-state.ts","webpack:///./src/store/games/snake-reducer.ts","webpack:///./src/domain/direction.ts","webpack:///./src/store/games/tetris-deposit.ts","webpack:///./src/store/games/tetris-tetromino.ts","webpack:///./src/domain/orientation.ts","webpack:///./src/store/games/tetris-state.ts","webpack:///./src/store/games/tetris-reducer.ts","webpack:///./src/store/games/index.ts","webpack:///./src/store/sound/audio-types.ts","webpack:///./src/store/sound/core-audio-epic.ts","webpack:///./src/store/sound/snake-game-audio-epic.ts","webpack:///./src/store/sound/tetris-game-audio-epic.ts","webpack:///./src/store/sound/index.ts","webpack:///./src/store/app-state.ts","webpack:///./src/store/app-reducer.ts","webpack:///./src/store/connects/connect-menu.ts","webpack:///./src/store/connects/connect-dashboard.ts","webpack:///./src/store/connects/connect-matrix.ts","webpack:///./src/store/connects/connect-keyboard.ts","webpack:///./src/store/connects/index.ts","webpack:///./src/svg-path.ts","webpack:///./src/console/screen/icon/volume-mute-icon.tsx","webpack:///./src/console/screen/dashboard.tsx","webpack:///./src/console/screen/screen.tsx","webpack:///./src/console/screen/index.ts","webpack:///./src/console/keyboard/button-styles.ts","webpack:///./src/console/keyboard/button.tsx","webpack:///./src/console/keyboard/action-button.tsx","webpack:///./src/console/keyboard/keys-container.ts","webpack:///./src/console/keyboard/arrow-keys.tsx","webpack:///./src/console/keyboard/func-keys.tsx","webpack:///./src/console/keyboard/main-keys.tsx","webpack:///./src/console/keyboard/keyboard.tsx","webpack:///./src/console/keyboard/index.ts","webpack:///./src/console/console.tsx","webpack:///./src/console/index.ts","webpack:///./src/menu/menu-icon.tsx","webpack:///./src/menu/info.tsx","webpack:///./src/menu/menu.tsx","webpack:///./src/app/app.tsx","webpack:///./src/app/index.tsx","webpack:///./src/store/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","ReactRedux","Redux","ReactDOM","PropTypes","DecorateWrapper","styled_components_browser_esm","div","Title","h1","decorate_Decorate","external_React_default","a","PureComponent","[object Object]","createElement","ScreenColors","active","activeLight","lighten_default","deactivated","darken_default","background","deactivatedStyle","activeStyle","activeLightStyle","keyframe","animationCss","dura","twinkleStyle","sparkStle","NormalStyle","Pixel","td","props","size","undefined","state","getPixelStyle","pixel","memo","MatrixTable","table","width","hasBorder","matrix_Matrix","super","frame","height","RangeError","auto_bind_default","react","this","rows","immutable_es","map","rowIdx","Row","colIdxBegin","colIdxEndExclusive","toSeq","ci","pixelSize","screen","freeze","graphicWidth","graphicHeight","scoreDigitMaxWidth","countDigitMaxWidth","smallMatrixWidth","smallMatrixHeight","core","defaultButtonThrottleIntervalMs","maxLevel","snakeGame","beanProduceChance","baseCreepIntervalMs","winBodyLength","baseScore","escapeAnimationIntervalMs","tetrisGame","probability","I","L","J","T","S","Z","O","initialX","initialY","baseDescendIntervalMs","hardDropThrottleIntervalMs","markClearPauseDurationMs","winFloorCountPerLevel","Specs","MAX_WIDTH","FontWrapper","fontSize","sa_digital_number_default","FontForeground","FontBackground","digit_Digit","backgroundDigits","Math","pow","calculateBackgroundDigits","LifeBarWrapper","Heart","heartSize","isActive","life_bar_LifeBar","maxHp","count","deActiveCnt","hp","Array","keys","renderHearts","directionKeys","mainKeys","funcKeys","allKeys","noLogging","ActionGroups","randomInt","max","min","base","condition","msg","Error","requireTrue","ceiling","floor","random","checkNonEmpty","v","TypeError","checkStrictEqual","expected","is","createAction","type","createActionWithPayload","payload","soundEnable","soundDisable","consoleStart","consoleAnimate","increaseLevel","decreaseLevel","enterGame","exitGame","togglePause","toggleGame","dummyAction","nextLevel","win","CoreActions","addScore","score","quitGame","confirm","dummy","up","keyboard_actions_right","down","keyboard_actions_left","keyboard_actions_select","start","keyboard_actions_a","b","KeyboardActions","right","left","select","biteSelf","hitWall","SnakeActions","setDirection","direction","creep","head","grown","escape","step","Life","Minimal","Full","_PointImpl","x","y","other","Point","GameType","rotate","hardDrop","lockDown","nextBlock","overflow","TetrisActions","move","descend","lineMarkPause","ys","lineClear","dummyLayout","mapToMenuLayout","action","mapToPausedLayout","gameStatus","mapToSnakeLayout","mapToTetrisLayout","chooseKeyboardLayout","keyboard","status","isPaused","gameType","SNAKE","TETRIS","getGameKeyboard","keyboardEpic","action$","state$","pipe","operators","mapFunc","filter","animationEpic","withLatestFrom","anim","concatMap","of","operators_delay","frameInterval","winGameEpic","getLevel","level","quitGameEpic","exitGameEpic","coreEpic","epic","combineEpics","_winGameEpic","_exitGameEpic","_quitGameEpic","_animationEpic","K","W","H","BLANK_FRAME","toList","sW","sH","sL","toIndex1","MaxY","toIndex2","MaxYs","borderFrame","tetrisGameFrame","buffer","fill","deposit","render","depo","forEach","row","xyToIndex2","block","tetrisSmallFrame","tetromino","renderBase","toIndex2s","graphic_engine_frameBuffer","Uint8Array","ArrayBuffer","smallFrameBuffer","Graphic","drawMatrix","currentFrame","frameBuffer","body","bean","hole","snakeGameFrame","snake","tetris","pauseIndication","drawTetrisSmallMatrix","es","animation_console_start_ConsoleStartAnimation","next","isCompleted","InitialConsoleStartAnimation","A","E","letters_I","N","letters_K","R","letters_S","SPACE8","split","repeat","join","Letters","FRAME_INTERVAL_MS","SEPARATOR","animator_BackgroundAnimator","letters","windowWidth","colIdx","lastFrameTimestamp","Date","now","backgroundSheet","convertLettersToRows","line","replace","sheetWidth","offset","backgroundWindow","substr","charAt","fi","shiftWindow","separator","letter","alignLetter","reduce","BackgroundAnims","_convertLettersToRows","INITIAL_BODY","WORDS_OFFSET","BORDER_FRAME","animation_snake_SnakeAnimation","lastTail","di","h","last","nx","ny","nd","nb","concat","takeLast","lt","first","setBackgroundFrame","InitialSnakeAnimation","animation_tetris_WORDS_OFFSET","X","Y","TetrominoLayouts","animation_tetris_TetrisAnimation","InitialTetrisAnimation","Tetromino","new","emptyAnim","advance","Animations","consoleStartInitial","snakeInitial","tetrisInitial","DefaultCoreState","scores","counts","maxScores","audioEnabled","CoreState","Default","GameTypeValues","coreReducer","immer_module","draft","update","prev","add","li","set","ld","currentAnimation","mergeWith","maxFunc","checkStrictNonEqual","current","values","currentIdx","indexOf","nextEnum","prevScore","round","s1","s2","v1","v2","nextAnim","core_coreEpic","heartbeatFunc","baseInterval","triggerActionTypes","stopActionTypes","actionMapFunc","includes","switchMap","interval","timer","takeUntil","nextCreepAction","appState","newHeadPoint","equals","isHittingWall","contains","BASIC_INTERVAL","creepEpic","SCORE_BASE","scoreEpic","bodyLength","winBonus","ESCAPE_INTERVAL","escapeEpic","exitEpic","life","mapTo","snakeEpic","_scoreEpic","_escapeEpic","_nextCreepAction","_exitEpic","descendEpic","shouldLock","LINE_CLEAR_PAUSE_DURATION","tetris_epic_SCORE_BASE","tetrisEpic","tap","clear","fullLines","isOverflow","clearLines","lines","floorCount","lineCnt","INITIAL_LENGTH","DefaultSnakeGameState","tailY","tailX","reverse","initialBody","SnakeGameState","WIN_BODY_LENGTH","snakeGameReducer","d1","d2","isOppositeDirection","border","endX","beginX","endY","beginY","generateBean","assign","top","bottom","tetris_deposit_TetrisDeposit","xCap","yCap","_isOverflow","arr","predicate","findIndexOfLast","func","retainLines","_","points","point","callback","_set","singleton","TetrisDeposit","getInstance","_new","tetris_tetromino_I","buildBase","I_h","tetris_tetromino_L","L_m90","L_90","L_180","J_m90","J_90","J_180","tetris_tetromino_T","T_m90","T_90","T_180","tetris_tetromino_S","S_v","Z_v","tetris_tetromino_O","xs","sort","Repo","90","180","MAX_X","tetris_tetromino_Tetromino","orientation","moved","find","check","degree","rotateOrientation","offX","lowestBody","minBy","depositYs","dropDistance","bodyYs","minY","zip","dy","by","mark","_x","_y","_orientation","DummyTetromino","probabilityEntries","entries","PROBABILITY_TOP","n1","n2","createTetromino","memorisedCreateTetromino","nextRandom","k","_MAX_X","DefaultTetrisGameState","TetrisGameState","winFLoorCount","tetrisGameReducer","moveRight","moveLeft","gameEpic","SoundEffects","sfxCoreMenu","Audio","sfxCoreSelect","sfxKeypress","sfxEnterGame","sfxPauseIn","sfxPauseOut","sfxSnakeEatBean","sfxSnakeDamage","sfxSnakeEscape","sfxTetrisLockdown","sfxTetrisLineclear","createAudioEpic","audio","actionFilter","statePredicate","actionFilterOp","currentTime","play","playAudio","menuAudioEpic","selectGameAudioEpic","enterGameAudioEpic","pauseInAudioEpic","pauseOutAudioEpic","inGameKeypressAudioEpic","inGamePausedMainkeyAudioEpic","inGameQuitGameSelectKeyAudioEpic","coreAudioEpic","eatBeanAudioEpic","damageAudioEpic","escapeAudioEpic","snakeGameAudioEpic","rotateKeypressAudioEpic","lockDownAudioEpic","lineClearAudioEpic","tetrisGameAudioEpic","audioEpic","epics","epicMiddleware","createEpicMiddleware","composeEnhancers","developmentOnly","logger","redux_logger","collapsed","store","external_Redux_","appReducer","combined","run","connectToMenu","external_ReactRedux_","dispatch","toggleAudio","enabled","snakeLifeSelector","SmallFrame","allOff","allOn","all8digit","sum","connectToDashboard","enemyLife","getScore","getCount","smallFrame","audioMuted","connectToMatrix","connectToKeyboard","mainAThrottleInterval","upAction","rightAction","downAction","leftAction","selectAction","startAction","actionA","actionB","Connects","IconSvgPaths","info","github","question","mute","svgPath","StyledSvg","svg","volume_mute_icon_VolumeMuteIcon","xmlns","viewBox","activated","SCORE_WIDTH","COUNT_WIDTH","LEVEL_WIDTH","LIFE_HEART_COUNT","DashboardWrapper","Panel","LifePanel","indiWidth","SmallMatrixPanel","MiscPanel","getLife","dashboard","ScreenWrapper","ConnectedMatrix","console_screen","BasicColor","blue","yellow","red","green","black","btnColor","Color","darken40","transparentDarken40","transparentize_default","darken20","darken13","darken10","lighten20","lighten15","transparentWhite","fissureBorder","ButtonBasicCss","MainButtonCss","mainDiameter","FuncButtonCss","triangleSize","sqrt","arrowSize","ArrowButtonCss","UpButtonCss","LeftButtonCss","DownButtonCss","RightButtonCss","ButtonStyles","StyledButton","btnType","mapStyledButton","button_Button","Component","downHandler","upHandler","ReferenceError","code","keypressHandler","keyboardCode","actionHandler","document","addEventListener","ev","onMouseDown","handleDown","onMouseUp","handleUp","onClick","onTouchStart","handleTouch","onTouchEnd","preventTouchend","caption","e","preventDefault","removeEventListener","DEFAULT_THROTTLE_INTERVAL","action_button_ActionButton","throttleInterval","throttleIntervalMs","handles","throttledDispatch","lodash_throttle_default","trailing","fireOn","fireOff","handle","setInterval","setState","prevState","clearInterval","keys_container","baseTop","baseLeft","UpKeyContainer","RightKeyContainer","DownKeyContainer","LeftKeyContainer","arrow_keys","BaseFuncKeyCss","SelectKeyContainer","StartKeyContainer","func_keys_FuncKeys","KeyAContainer","KeyBContainer","main_keys","throttleIntervalA","throttleIntervalB","KeyboardWrapper","ArrowKeysContainer","FuncKeysContainer","MainKeysContainer","console_keyboard","mainBThrottleInterval","panelBright","rgb_default","ConsoleWrapper","scale","UpperRect","ScreenRect","LowerRect","console","scaleUI","id","innerWidth","innerHeight","DEFAULT_SIZE","menu_icon_StyledSvg","menu_icon_MenuIcon","onClickHandler","StyledDiv","version","info_Info","getUiInfo","updateUiInfo","uiWidth","uiHeight","DEFAULT_STATE","infoExpanded","Container","IconContainer","repoUrl","menu","audioSvnPath","closeInfo","href","target","toggleInfo","nextState","StyledAppWrapper","GlobalStyle","external_ReactDOM_default","getElementById","initiateConsole"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([80,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = React;","module.exports = ReactRedux;","module.exports = Redux;","module.exports = ReactDOM;","module.exports = __webpack_public_path__ + \"sa-digital-number.ttf\";","module.exports = PropTypes;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DecorateWrapper = styled.div`\n\n`;\n\nconst Title = styled.h1`\n  position: absolute;\n  width: 100%;\n  text-align: center;\n  font-weight: normal;\n  top: -18px;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  font-size: 36px;\n`;\n\nexport default class Decorate extends React.PureComponent<{}, {}> {\n    public render() {\n        return (\n            <DecorateWrapper>\n                <Title>Palm Game</Title>\n            </DecorateWrapper>\n        );\n    }\n}\n","import darken from \"polished/lib/color/darken\";\nimport lighten from \"polished/lib/color/lighten\";\n\nconst background = \"#9ead86\";\nconst active = \"#161616\";\n\nexport const ScreenColors = {\n  active,\n  activeLight: lighten(0.05, active),\n  deactivated: darken(0.05, background),\n  background,\n};\n","import React from \"react\";\nimport { PixelState } from \"src/domain\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { ScreenColors } from \"./screen-colors\";\n\nexport type PixelSize = 8 | 12;\n\ninterface Props {\n  value: PixelState;\n  size: PixelSize;\n}\n\nconst deactivatedStyle = css`\n    background: ${ScreenColors.deactivated};\n    border-color: ${ScreenColors.deactivated};\n`;\n\nconst activeStyle = css`\n    background: ${ScreenColors.active};\n    border-color: ${ScreenColors.active};\n`;\n\nconst activeLightStyle = css`\n    background: ${ScreenColors.activeLight};\n`;\n\nconst keyframe = keyframes`\n  50% {\n    ${activeStyle}\n  }\n  100% {\n    ${deactivatedStyle}\n  }\n`;\n\nconst animationCss = (dura: string) => css`\n  ${deactivatedStyle};\n  animation-iteration-count: infinite;\n  animation-name: ${keyframe};\n  animation-duration: ${dura};\n`;\n\nconst twinkleStyle = animationCss(\"1s\");\nconst sparkStle = animationCss(\"400ms\");\n\nconst NormalStyle = css`\n  padding: 2px;\n  border: 2px solid;\n  box-shadow: inset 0 0 0 2px ${ScreenColors.background};\n  background-clip: content-box;\n`;\n\nconst Pixel: import(\"styled-components\").StyledComponent<\"td\", any, Props> = styled.td`\n  display: inline-block;\n  margin: 1px;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  ${props => props.size === 12 ? NormalStyle : undefined};\n  ${(props: Props) => getPixelStyle(props.value, props.size)};\n`;\n\nfunction getPixelStyle(state: PixelState, size: PixelSize) {\n  switch (state) {\n    case PixelState.ON:\n      return size === 12 ? activeStyle : activeLightStyle;\n    case PixelState.OFF:\n      return deactivatedStyle;\n    case PixelState.TWINKLE:\n      return twinkleStyle;\n    case PixelState.BLINK:\n      return sparkStle;\n  }\n}\n\nexport default React.memo(Pixel);\n","import autoBind from \"auto-bind\";\nimport { Range } from \"immutable\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Pixel from \"./pixel\";\n\ninterface Style {\n  readonly width: number;\n  readonly hasBorder: boolean;\n}\n\nexport interface MatrixProps extends Style {\n  readonly width: number;\n  readonly height: number;\n  readonly pixelSize: import(\"./pixel\").PixelSize;\n  readonly frame: Frame;\n}\n\nconst MatrixTable = styled.table`\n  width: ${(props: Style) => 22 * props.width + 10}px;\n  ${(props: Style) => props.hasBorder ? \"border:2px solid #000\" : \"\"};\n  padding:1px;\n  line-height: 1px;\n`;\n\nexport default class Matrix extends React.PureComponent<MatrixProps, {}> {\n\n  constructor(props: Readonly<MatrixProps>) {\n    super(props);\n    if (props.frame.size !== props.width * props.height) {\n      throw RangeError(`Invalid size, width=${props.width}, height=${props.height}, pixelCnt=${props.frame.size}`);\n    }\n    autoBind.react(this);\n  }\n\n  public render() {\n    const rows = Range(0, this.props.height).map(rowIdx => (<tr key={rowIdx}>{this.Row(rowIdx)}</tr>));\n    return (\n      <MatrixTable width={this.props.width} hasBorder={this.props.hasBorder}>\n        <tbody>{rows}</tbody>\n      </MatrixTable>\n    );\n  }\n\n  private Row(rowIdx: number) {\n    const colIdxBegin = rowIdx * this.props.width;\n    const colIdxEndExclusive = colIdxBegin + this.props.width;\n    return this.props.frame.toSeq().slice(colIdxBegin, colIdxEndExclusive).map((a, ci) => (\n      <Pixel value={a} key={ci} size={this.props.pixelSize} />\n    ));\n  }\n}\n","const isProd = process.env.NODE_ENV === \"production\";\n\nconst screen = Object.freeze({\n  graphicWidth: 10,\n  graphicHeight: 16,\n  scoreDigitMaxWidth: 7,\n  countDigitMaxWidth: 4,\n  smallMatrixWidth: 4,\n  smallMatrixHeight: 2,\n});\n\nconst core = Object.freeze({\n  defaultButtonThrottleIntervalMs: 120,\n  maxLevel: 9,\n});\n\nconst snakeGame = Object.freeze({\n  beanProduceChance: 0.5,\n  baseCreepIntervalMs: 1000,\n  winBodyLength: isProd ? 15 : 7,\n  baseScore: 5,\n  escapeAnimationIntervalMs: 100,\n});\n\nconst tetrisGame = Object.freeze({\n  probability: {\n    I: 10, L: 5, J: 5, T: 8, S: 5, Z: 5, O: 8\n  },\n  initialX: screen.graphicWidth / 2,\n  initialY: screen.graphicHeight - 1,\n  baseDescendIntervalMs: 1000,\n  hardDropThrottleIntervalMs: 600,\n  markClearPauseDurationMs: 400,\n  baseScore: 5,\n  winFloorCountPerLevel: isProd ? 50 : 3,\n});\n\nconst constants = Object.freeze({ screen, core, snakeGame, tetrisGame });\n\nexport const Specs = constants;\n","import React from \"react\";\nimport {Specs} from \"src/specs\";\nimport styled from \"styled-components\";\nimport {ScreenColors} from \"../screen-colors\";\nimport DigitFont from \"./sa-digital-number.ttf\";\n\ninterface Props {\n    value: number;\n    width: number;\n    fontSize: FontSize;\n}\n\nexport const enum FontSize {\n    NORMAL = 15,\n    LARGE = 22\n}\n\nconst MAX_WIDTH = Specs.screen.scoreDigitMaxWidth;\n\ninterface FontProps {\n    fontSize: FontSize;\n}\n\nconst FontWrapper = styled.div`\n  font-family: 'sa-digital-number', serif;\n  position: relative;\n  margin: 5px 0 5px;\n  font-size: ${(props: FontProps) => props.fontSize}px;\n  height: ${(props: FontProps) => props.fontSize + 2}px;\n  \n  @font-face {\n    font-family: 'sa-digital-number';\n    src: url(${DigitFont});\n  }\n  \n  p {\n    position: absolute;\n    margin: 0;\n    top: 1px;\n    right: 0;\n    bottom: 1px;\n  }\n`;\n\nconst FontForeground = styled.p`\n  color: ${ScreenColors.active};\n  z-index: 2;\n`;\n\nconst FontBackground = styled.p`\n  color: ${ScreenColors.deactivated};\n  z-index: 1;\n`;\n\nexport default class Digit extends React.PureComponent<Props, {}> {\n    private readonly backgroundDigits: number;\n\n    constructor(props: Props) {\n        super(props);\n        if (props.width > MAX_WIDTH) {\n            throw new RangeError(`Digit width must be <=${MAX_WIDTH} and >0.`);\n        }\n        this.backgroundDigits = calculateBackgroundDigits(props.width);\n    }\n\n    public render() {\n        return (\n            <FontWrapper fontSize={this.props.fontSize}>\n                <FontForeground>{this.props.value}</FontForeground>\n                <FontBackground>{this.backgroundDigits}</FontBackground>\n            </FontWrapper>\n        );\n    }\n}\n\nfunction calculateBackgroundDigits(width: number) {\n    let n = 8;\n    for (let i = 1; i < width; i++) {\n        n = n + 8 * Math.pow(10, i);\n    }\n    return n;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ScreenColors } from \"./screen-colors\";\n\ninterface Props {\n  hp: number;\n  maxHp: number;\n  count: number;\n}\n\ninterface HeartProps {\n  isActive: boolean;\n}\n\nconst heartSize = 10;\n\nconst LifeBarWrapper = styled.div`\n  overflow: auto;\n`;\n\nconst Heart = React.memo(styled.div`\n    display: inline-block;\n    margin: 2px;\n    position: relative;\n    width: ${heartSize}px;\n    height: ${heartSize}px;\n    \n    &:before, &:after {\n      position: absolute;\n      content: \"\";\n      left: ${heartSize / 2}px;\n      top: 0;\n      width: ${heartSize / 2}px;\n      height: ${heartSize}px;\n      background: ${(props: HeartProps) => props.isActive ? ScreenColors.active : ScreenColors.deactivated};\n      border-radius: ${heartSize / 2} ${heartSize}/2 0 0;\n      transform: rotate(-45deg);\n      transform-origin: 0 100%;\n    }\n    &:after {\n      left: 0;\n      transform: rotate(45deg);\n      transform-origin: 100% 100%;\n    }\n`);\n\nexport default class LifeBar extends React.PureComponent<Props, {}> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    if (props.maxHp <= 0) {\n      throw new RangeError(`Life bar maxHp must be > 0. But it's set to ${props.maxHp}.`);\n    }\n    if (props.count <= 0) {\n      throw new RangeError(`Life bar width must be > 0. But it's set to ${props.count}.`);\n    }\n  }\n\n  public render() {\n    return (\n      <LifeBarWrapper>\n        {renderHearts(this.props)}\n      </LifeBarWrapper>\n    );\n  }\n}\n\n// todo: optimize\nfunction renderHearts(props: Readonly<Props>) {\n  const deActiveCnt = props.maxHp <= 0 ? props.count : (1 - props.hp / props.maxHp) * props.count;\n  return [...Array(props.count).keys()].map(i => (<Heart isActive={deActiveCnt <= i} key={i} />));\n}\n","export const enum ActionType {\n    DUMMY_ACTION = \"[none] dummy action\",\n\n    ENABLE_SOUND = \"[sys] enable sound\",\n    DISABLE_SOUND = \"[sys] disable sound\",\n    CONSOLE_START = \"[sys] console start\",\n    CONSOLE_ANIMATE = \"[sys] console animate\",\n    TOGGLE_PAUSE = \"[sys] toggle pause\",\n    ENTER_GAME = \"[sys] enter game\",\n    EXIT_GAME = \"[sys] exit game\",\n    TOGGLE_GAME = \"[sys] toggle game\",\n\n    UP = \"[key] trigger up\",\n    RIGHT = \"[key] trigger right\",\n    DOWN = \"[key] trigger down\",\n    LEFT = \"[key] trigger left\",\n    SELECT = \"[key] trigger select\",\n    START = \"[key] trigger START\",\n    A = \"[key] trigger A\",\n    B = \"[key] trigger B\",\n\n    QUIT_GAME = \"[game] quit\",\n    GAME_NEXT_LEVEL = \"[game] next level\",\n    GAME_WIN = \"[game] win\",\n\n    INCREASE_LEVEL = \"[game] increase level\",\n    DECREASE_LEVEL = \"[game] decrease level\",\n    ADD_SCORE = \"[game] add score\",\n    SET_DIRECTION = \"[game] set direction\",\n\n    SNAKE_CREEP = \"[game snake] creep\",\n    SNAKE_BITE_SELF = \"[game snake] bite self\",\n    SNAKE_HIT_WALL = \"[game snake] hit wall\",\n    SNAKE_ESCAPE = \"[game snake] escape through hole\",\n\n    TETRIS_ROTATE = \"[game tetris] rotate\",\n    TETRIS_DESCEND = \"[game tetris] descend\",\n    TETRIS_MOVE = \"[game tetris] move\",\n    TETRIS_HARD_DROP = \"[game tetris] hard drop\",\n    TETRIS_LOCK_DOWN = \"[game tetris] lock down\",\n    TETRIS_NEXT_BLOCK = \"[game tetris] next block\",\n    TETRIS_LINE_MARK_PAUSE = \"[game tetris] line mark pause (pre-clear)\",\n    TETRIS_LINE_CLEAR = \"[game tetris] line clear\",\n    TETRIS_OVERFLOW = \"[game tetris] overflow\",\n}\n\nconst directionKeys = Object.freeze([ActionType.UP, ActionType.RIGHT, ActionType.DOWN, ActionType.LEFT]);\nconst mainKeys = Object.freeze([ActionType.A, ActionType.B]);\nconst funcKeys = Object.freeze([ActionType.SELECT, ActionType.START]);\nconst allKeys = Object.freeze([...funcKeys, ...mainKeys, ...funcKeys]);\nconst noLogging = Object.freeze([...allKeys, ActionType.CONSOLE_ANIMATE]);\n\nexport const ActionGroups = Object.freeze({\n    directionKeys,\n    mainKeys,\n    funcKeys,\n    allKeys,\n    noLogging\n});\n","function delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/** complexity O(n) */\nfunction nextEnum<T>(current: T, values: ReadonlyArray<T>): T {\n  const currentIdx = values.indexOf(current);\n  return currentIdx >= values.length - 1 ? values[0] : values[currentIdx + 1];\n}\n\nfunction identity<T>(t: T): T {\n  return t;\n}\n\nfunction logicNot(value: boolean): boolean {\n  return !value;\n}\n\n/** both params are inclusive */\nfunction randomInt(max: number, min?: number): number {\n  const base = min ? min : 0;\n  requireTrue(max > base, \"max must > min\");\n  const ceiling = max - base;\n  return Math.floor(Math.random() * Math.floor(ceiling)) + base;\n}\n\n/** Not undefined, not null, not empty string. */\nfunction checkNonEmpty<T>(v: T | undefined): T {\n  if (v === null) {\n    throw new TypeError(\"Value is null\");\n  } else if (v === undefined) {\n    throw new TypeError(\"Value is undefined\");\n  } else if (typeof v === \"string\" && v.length === 0) {\n    throw new Error(\"Value is empty string.\");\n  }\n  return v;\n}\n\nfunction fallback<T>(v: T | undefined, defaultValue: T): T {\n  return v ? v : defaultValue;\n}\n\nfunction checkStrictEqual(v: any, expected: any, msg: string = `'${v}' is not strictly equal to '${expected}'!`) {\n  if (!Object.is(v, expected)) {\n    throw Error(msg);\n  }\n}\n\nfunction checkStrictNonEqual(v: any, expected: any, msg: string = `'${v}' is strictly equal to '${expected}'!`) {\n  if (Object.is(v, expected)) {\n    throw Error(msg);\n  }\n}\n\nfunction throwTypeError(v: any): void {\n  throw new TypeError(\"unknown type:\" + v);\n}\n\nfunction requireTrue(condition: boolean, msg?: string) {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\n\nfunction findIndexOfLast<T>(arr: ReadonlyArray<T>, predicate: (elem: T, idx: number) => boolean): number {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const element = arr[i];\n    if (predicate(element, i)) return i;\n  }\n  return -1;\n}\n\nexport {\n  delay,\n  nextEnum,\n  identity,\n  logicNot,\n  randomInt,\n  checkNonEmpty,\n  fallback,\n  checkStrictEqual,\n  checkStrictNonEqual,\n  throwTypeError,\n  findIndexOfLast\n};\n","import { checkNonEmpty } from \"src/utils\";\n\ntype Action<T> = import(\"redux\").Action<T>;\n\ninterface ActionWithPayload<T extends string, P> extends Action<T> {\n  readonly payload: P;\n}\n\nexport function createAction<T extends string, P>(type: T): Action<T> {\n  return Object.freeze({ type: checkNonEmpty(type) });\n}\n\nexport function createActionWithPayload<T extends string, P>(type: T, payload: P): ActionWithPayload<T, P> {\n  return Object.freeze({ type: checkNonEmpty(type), payload: checkNonEmpty(payload) });\n}\n\ntype FunctionType = (...arg: any[]) => any;\n\ninterface MapObject {\n  [actionCreator: string]: FunctionType;\n}\n\nexport type ActionUnion<A extends MapObject> = ReturnType<A[keyof A]>;\n","import { createAction, createActionWithPayload } from \"./types-utils\";\nimport { ActionType } from \"./actions\";\n\nconst soundEnable = createAction(ActionType.ENABLE_SOUND);\nconst soundDisable = createAction(ActionType.DISABLE_SOUND);\nconst consoleStart = createAction(ActionType.CONSOLE_START);\nconst consoleAnimate = createAction(ActionType.CONSOLE_ANIMATE);\nconst increaseLevel = createAction(ActionType.INCREASE_LEVEL);\nconst decreaseLevel = createAction(ActionType.DECREASE_LEVEL);\nconst enterGame = createAction(ActionType.ENTER_GAME);\nconst exitGame = createAction(ActionType.EXIT_GAME);\nconst togglePause = createAction(ActionType.TOGGLE_PAUSE);\nconst toggleGame = createAction(ActionType.TOGGLE_GAME);\nconst dummyAction = createAction(ActionType.DUMMY_ACTION);\n\nconst nextLevel = createAction(ActionType.GAME_NEXT_LEVEL);\nconst win = createAction(ActionType.GAME_WIN);\n\nexport const CoreActions = Object.freeze({\n  soundEnable: () => soundEnable,\n  soundDisable: () => soundDisable,\n  consoleStart: () => consoleStart,\n  consoleAnimate: () => consoleAnimate,\n  addScore: (score: number, count: number) => createActionWithPayload(ActionType.ADD_SCORE, { score, count }),\n  increaseLevel: () => increaseLevel,\n  decreaseLevel: () => decreaseLevel,\n  enterGame: () => enterGame,\n  exitGame: () => exitGame,\n  togglePause: () => togglePause,\n  toggleGame: () => toggleGame,\n  quitGame: (confirm: boolean) => createActionWithPayload(ActionType.QUIT_GAME, confirm),\n  dummy: () => dummyAction,\n\n  nextLevel: () => nextLevel,\n  win: () => win,\n});\n\nexport type CoreAction = import(\"./types-utils\").ActionUnion<typeof CoreActions>;\n","import {createAction} from \"./types-utils\";\nimport {ActionType} from \"./actions\";\n\nconst up = createAction(ActionType.UP);\nconst right = createAction(ActionType.RIGHT);\nconst down = createAction(ActionType.DOWN);\nconst left = createAction(ActionType.LEFT);\nconst select = createAction(ActionType.SELECT);\nconst start = createAction(ActionType.START);\nconst a = createAction(ActionType.A);\nconst b = createAction(ActionType.B);\n\nexport const KeyboardActions = Object.freeze({\n    up,\n    right,\n    down,\n    left,\n    select,\n    start,\n    a,\n    b,\n});\n\ntype A = typeof KeyboardActions;\n\nexport type KeyboardAction = A[keyof A];\n","import {createAction, createActionWithPayload} from \"./types-utils\";\nimport {ActionType} from \"./actions\";\nimport {Direction, Point} from \"src/domain\";\n\nconst biteSelf = createAction(ActionType.SNAKE_BITE_SELF);\nconst hitWall = createAction(ActionType.SNAKE_HIT_WALL);\n\nexport const SnakeActions = Object.freeze({\n    setDirection: (direction: Direction) => createActionWithPayload(ActionType.SET_DIRECTION, direction),\n    biteSelf: () => biteSelf,\n    hitWall: () => hitWall,\n    creep: (head: Point, grown: boolean) => createActionWithPayload(ActionType.SNAKE_CREEP, {head, grown}),\n    escape: (step: number) => createActionWithPayload(ActionType.SNAKE_ESCAPE, step),\n});\n\nexport type SnakeAction = import(\"./types-utils\").ActionUnion<typeof SnakeActions>;\n","export interface Life {\n    readonly hp: number;\n    readonly maxHp: number;\n}\n\nconst Minimal: Life = {hp: 0, maxHp: 0};\nconst Full: Life = {hp: 100, maxHp: 100};\n\nexport const Life = Object.freeze({Minimal, Full});\n","type ValueObject = import(\"immutable\").ValueObject;\n\nexport interface Point extends ValueObject {\n    readonly x: number;\n    readonly y: number;\n}\n\nclass _PointImpl implements Point {\n    public readonly x: number;\n    public readonly y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public equals(other: any): boolean {\n        return other instanceof _PointImpl && other.x === this.x && other.y === this.y;\n    }\n\n    public hashCode(): number {\n        return (37 * this.x + 11) * 17 + 13 * this.y;\n    }\n}\n\nexport function Point(x: number, y: number): Point {\n    return new _PointImpl(x, y);\n}\n","export const enum SystemStatus {\n  STARTING = \"STARTING\", MENU = \"MENU\", IN_GAME = \"IN_GAME\"\n}\n\nexport const enum GameStatus {\n  STOPPED = \"stopped\", RUNNING = \"running\", PAUSED = \"paused\", TO_QUIT = \"to_quit\"\n}\n\nexport enum GameType {\n  SNAKE = \"snake\", TETRIS = \"tetris\"\n}\n\nexport const enum PixelState {\n  OFF, ON, TWINKLE, BLINK\n}\n","import { createActionWithPayload, createAction } from \"./types-utils\";\nimport { ActionType } from \"./actions\";\n\nconst rotate = createAction(ActionType.TETRIS_ROTATE);\nconst hardDrop = createAction(ActionType.TETRIS_HARD_DROP);\nconst lockDown = createAction(ActionType.TETRIS_LOCK_DOWN);\nconst nextBlock = createAction(ActionType.TETRIS_NEXT_BLOCK);\nconst overflow = createAction(ActionType.TETRIS_OVERFLOW);\n\nexport const TetrisActions = Object.freeze({\n  move: (x: number) => createActionWithPayload(ActionType.TETRIS_MOVE, x),\n  rotate: () => rotate,\n  descend: (mode: \"manual\" | \"auto\") => createActionWithPayload(ActionType.TETRIS_DESCEND, mode),\n  hardDrop: () => hardDrop,\n  lockDown: () => lockDown,\n  nextBlock: () => nextBlock,\n  lineMarkPause: (ys: ReadonlyArray<number>) => createActionWithPayload(ActionType.TETRIS_LINE_MARK_PAUSE, ys),\n  lineClear: (ys: ReadonlyArray<number>) => createActionWithPayload(ActionType.TETRIS_LINE_CLEAR, ys),\n  overflow: () => overflow,\n});\n\nexport type TetrisAction = import(\"./types-utils\").ActionUnion<typeof TetrisActions>;\n","import { Observable } from \"rxjs\";\nimport { ofType, StateObservable } from \"redux-observable\";\nimport { filter, map } from \"rxjs/operators\";\nimport { Direction, GameType, SystemStatus, GameStatus } from \"src/domain\";\nimport { ActionType, SnakeActions } from \"../action\";\nimport { CoreActions } from \"../core\";\nimport { TetrisActions } from \"../action/tetris-actions\";\n\nfunction dummyLayout(): AppAction {\n  return CoreActions.dummy();\n}\n\nfunction mapToMenuLayout(action: KeyboardAction): AppAction {\n  switch (action.type) {\n    case ActionType.SELECT:\n      return CoreActions.toggleGame();\n    case ActionType.START:\n      return CoreActions.enterGame();\n    case ActionType.LEFT:\n      return CoreActions.decreaseLevel();\n    case ActionType.RIGHT:\n      return CoreActions.increaseLevel();\n    default:\n      return CoreActions.dummy();\n  }\n}\n\nfunction mapToPausedLayout(action: KeyboardAction, state: CoreState): AppAction {\n  switch (action.type) {\n    case ActionType.START:\n      return CoreActions.togglePause();\n    case ActionType.SELECT:\n      return CoreActions.quitGame(state.gameStatus === GameStatus.TO_QUIT);\n    default:\n      return CoreActions.dummy();\n  }\n}\n\nfunction mapToSnakeLayout(action: KeyboardAction): AppAction {\n  switch (action.type) {\n    case ActionType.UP:\n      return SnakeActions.setDirection(Direction.NORTH);\n    case ActionType.RIGHT:\n      return SnakeActions.setDirection(Direction.EAST);\n    case ActionType.DOWN:\n      return SnakeActions.setDirection(Direction.SOUTH);\n    case ActionType.LEFT:\n      return SnakeActions.setDirection(Direction.WEST);\n    case ActionType.START:\n      return CoreActions.togglePause();\n    default:\n      return CoreActions.dummy();\n  }\n}\n\nfunction mapToTetrisLayout(action: KeyboardAction): AppAction {\n  switch (action.type) {\n    case ActionType.RIGHT:\n      return TetrisActions.move(1);\n    case ActionType.DOWN:\n      return TetrisActions.descend(\"manual\");\n    case ActionType.LEFT:\n      return TetrisActions.move(-1);\n    case ActionType.A:\n      return TetrisActions.hardDrop();\n    case ActionType.B:\n      return TetrisActions.rotate();\n    case ActionType.START:\n      return CoreActions.togglePause();\n    default:\n      return CoreActions.dummy();\n  }\n}\n\nfunction chooseKeyboardLayout(state: CoreState): (action: AppAction, state: CoreState) => AppAction {\n  let keyboard;\n  if (state.status === SystemStatus.STARTING) {\n    keyboard = dummyLayout;\n  } else if (state.status === SystemStatus.MENU) {\n    keyboard = mapToMenuLayout;\n  } else if (state.status === SystemStatus.IN_GAME) {\n    keyboard = state.isPaused() ? mapToPausedLayout : getGameKeyboard(state.gameType);\n  } else {\n    throw new TypeError(\"Unknown system status:\" + state.status);\n  }\n  return keyboard;\n}\n\nfunction getGameKeyboard(gameType: GameType): (action: AppAction) => AppAction {\n  switch (gameType) {\n    case GameType.SNAKE:\n      return mapToSnakeLayout;\n    case GameType.TETRIS:\n      return mapToTetrisLayout;\n    default:\n      throw new TypeError(\"Unknown enum type:\" + gameType);\n  }\n}\n\nconst epic = (action$: Observable<AppAction>, state$: StateObservable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.UP, ActionType.RIGHT, ActionType.DOWN, ActionType.LEFT,\n      ActionType.SELECT, ActionType.START, ActionType.A, ActionType.B),\n    map(a => {\n      const s = state$.value.core;\n      const mapFunc = chooseKeyboardLayout(s);\n      return mapFunc(a, s);\n    }),\n    filter(a => a.type !== ActionType.DUMMY_ACTION)\n  );\n};\n\nexport const keyboardEpic = {\n  epic,\n};\n","import { Observable, of } from \"rxjs\";\nimport { combineEpics, ofType } from \"redux-observable\";\nimport { concatMap, delay, filter, map, withLatestFrom } from \"rxjs/operators\";\nimport { ActionType, CoreActions } from \"../action\";\nimport { AnimType } from \"../graphic\";\nimport { Specs } from \"src/specs\";\n\nconst animationEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.CONSOLE_ANIMATE, ActionType.CONSOLE_START, ActionType.TOGGLE_GAME),\n    withLatestFrom(state$),\n    map(([, s]) => s.core.anim),\n    filter(a => a.type !== AnimType.DUMMY),\n    concatMap(a => of(CoreActions.consoleAnimate()).pipe(delay(a.frameInterval))),\n  );\n};\n\nconst winGameEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.GAME_WIN),\n    withLatestFrom(state$),\n    map(([, s]) => s.core.getLevel()),\n    concatMap(level =>\n      level >= Specs.core.maxLevel ? of(CoreActions.exitGame()) : of(CoreActions.increaseLevel(), CoreActions.nextLevel())\n    )\n  );\n};\n\nconst quitGameEpic = (action$: Observable<AppAction>) => {\n  return action$.pipe(\n    filter(a => a.type === ActionType.QUIT_GAME && a.payload),\n    map(() => CoreActions.exitGame())\n  );\n};\n\nconst exitGameEpic = (action$: Observable<AppAction>) => {\n  return action$.pipe(\n    ofType(ActionType.EXIT_GAME),\n    map(() => CoreActions.consoleStart())\n  );\n};\n\nexport const coreEpic = {\n  epic: combineEpics(animationEpic, winGameEpic, quitGameEpic, exitGameEpic),\n  _winGameEpic: winGameEpic,\n  _exitGameEpic: exitGameEpic,\n  _quitGameEpic: quitGameEpic,\n  _animationEpic: animationEpic,\n};\n","import {PixelState} from \"src/domain\";\nimport {Range} from \"immutable\";\nimport {Specs} from \"src/specs\";\n\nexport const I = PixelState.ON;\nexport const O = PixelState.OFF;\nexport const S = PixelState.TWINKLE;\nexport const K = PixelState.BLINK;\nexport const W = Specs.screen.graphicWidth;\nexport const H = Specs.screen.graphicHeight;\nexport const L = W * H;\nexport const BLANK_FRAME = Range(0, L).map(() => O).toList();\n\nexport const sW = Specs.screen.smallMatrixWidth;\nexport const sH = Specs.screen.smallMatrixHeight;\nexport const sL = sW * sH;\n","import { W, H, sW, sH } from \"./graphic-types\";\n\ntype Point = import(\"src/domain\").Point;\n\n/** From top to bottom coordination */\nexport function toIndex1(p: Point): number {\n  return p.y * W + p.x;\n}\n\nconst MaxY = H - 1;\n/** Classic coordination */\nexport function toIndex2(p: Point): number {\n  return p.x + (MaxY - p.y) * W;\n}\nexport function xyToIndex2(x: number, y: number): number {\n  return x + (MaxY - y) * W;\n}\n\nconst MaxYs = sH - 1;\nexport function toIndex2s(p: Point): number {\n  return p.x + (MaxYs - p.y) * sW;\n}\n","import { List, Range } from \"immutable\";\nimport { I, L, O, S, W } from \"./graphic-types\";\nimport { toIndex1 } from \"./graphic-utils\";\n\nconst borderFrame = Range(0, L).map(i => {\n  if (i <= W || i % W === 0 || (i + 1) % W === 0 || i > L - W) {\n    return I;\n  } else {\n    return O;\n  }\n}).toList();\n\nexport function snakeGameFrame(state: SnakeGameState, frameBuffer: Uint8Array): Frame {\n  borderFrame.forEach((v, i) => frameBuffer[i] = v);\n  state.body.forEach(p => {\n    frameBuffer[toIndex1(p)] = I;\n  });\n  if (state.bean) {\n    frameBuffer[toIndex1(state.bean)] = S;\n  }\n  if (state.hole) {\n    frameBuffer[toIndex1(state.hole)] = O;\n  }\n  return List(frameBuffer);\n}\n","import { List } from \"immutable\";\nimport { Specs } from \"src/specs\";\nimport { Tetromino } from \"../games\";\nimport { I, K, O } from \"./graphic-types\";\nimport { toIndex2, xyToIndex2, toIndex2s } from \"./graphic-utils\";\n\nexport function tetrisGameFrame(state: TetrisGameState, buffer: Uint8Array): Frame {\n  buffer.fill(O);\n  state.deposit.render(depo => {\n    depo.forEach((row, y) => {\n      row.forEach((v, x) => {\n        if (v > 0) {\n          const i = xyToIndex2(x, y);\n          if (i < buffer.length) buffer[i] = v === 1 ? I : K;\n        }\n      });\n    });\n  });\n  state.block.render().forEach(p => buffer[toIndex2(p)] = I);\n  return List(buffer);\n}\n\nexport function tetrisSmallFrame(tetromino: Tetromino, buffer: Uint8Array): Frame {\n  buffer.fill(O);\n  const t = tetromino.height > Specs.screen.smallMatrixHeight ? tetromino.rotate() : tetromino;\n  t.renderBase().forEach(p => buffer[toIndex2s(p)] = I);\n  return List(buffer);\n}\n","import { GameType, SystemStatus } from \"src/domain\";\nimport { BLANK_FRAME, I, L, O, S, sL } from \"./graphic-types\";\nimport { snakeGameFrame } from \"./graphic-snake\";\nimport { tetrisGameFrame, tetrisSmallFrame } from \"./graphic-tetris\";\nimport { createSelector } from \"reselect\";\nimport { identity } from \"src/utils\";\nimport { Tetromino } from \"../games\";\n\nconst frameBuffer: Uint8Array = new Uint8Array(new ArrayBuffer(L));\nconst smallFrameBuffer: Uint8Array = new Uint8Array(new ArrayBuffer(sL));\n\nfunction drawMatrix(state: AppState): Frame {\n  let frame: Frame = BLANK_FRAME;\n  switch (state.core.status) {\n    case SystemStatus.STARTING:\n    case SystemStatus.MENU:\n      frame = state.core.anim.currentFrame(frameBuffer);\n      break;\n    case SystemStatus.IN_GAME:\n      switch (state.core.gameType) {\n        case GameType.SNAKE:\n          frame = snakeGameFrame(state.snake, frameBuffer);\n          break;\n        case GameType.TETRIS:\n          frame = tetrisGameFrame(state.tetris, frameBuffer);\n          break;\n        default:\n          throw new TypeError(\"Unknown gameType:\" + state.core.gameType);\n      }\n      if (state.core.isPaused()) {\n        frame = pauseIndication(frame);\n      }\n  }\n  return frame;\n}\n\nfunction pauseIndication(frame: Frame): Frame {\n  return frame.map(s => s === I ? S : O);\n}\n\nexport const Graphic = Object.freeze({\n  drawMatrix,\n  drawTetrisSmallMatrix: createSelector(identity, (t: Tetromino) => tetrisSmallFrame(t, smallFrameBuffer)),\n});\n","import { I, O } from \"./graphic-types\";\nimport { List } from \"immutable\";\nimport { AnimType } from \"./anim\";\n\ntype Anim = import(\"./anim\").Anim;\n\nclass ConsoleStartAnimation implements Anim {\n    private readonly step: number;\n\n    constructor(step?: number) {\n        this.step = step === undefined ? 1 : step;\n    }\n\n    public isCompleted(): boolean {\n        return this.step >= 3;\n    }\n\n    public advance(): Anim {\n        let next: Anim;\n        if (this.isCompleted()) {\n            next = this;\n        } else {\n            next = new ConsoleStartAnimation(this.step + 1);\n        }\n        return next;\n    }\n\n    public currentFrame(frameBuffer: Uint8Array): Frame {\n        switch (this.step) {\n            case 1:\n                frameBuffer.fill(O);\n                break;\n            case 2:\n                frameBuffer.fill(I);\n                break;\n            case 3:\n                frameBuffer.fill(O);\n                break;\n        }\n        return List(frameBuffer);\n    }\n\n    get frameInterval(): number {\n        switch (this.step) {\n            case 1:\n                return 200;\n            case 2:\n                return 1000;\n            case 3:\n                return 200;\n            default:\n                throw new Error(\"Asssertion error: no such step\");\n        }\n    }\n\n    get type(): AnimType {\n        return AnimType.CONSOLE_START;\n    }\n}\n\nexport const InitialConsoleStartAnimation: Anim = new ConsoleStartAnimation();\n","const A = {\n  value: `\nIII\nI I\nIII\nI I\nI I\n`, width: 3\n};\n\nconst E = {\n  value: `\nIII\nI\nIII\nI\nIII\n`, width: 3\n};\n\nconst I = {\n  value: `\nI\nI\nI\nI\nI\n`, width: 1\n};\n\nconst N = {\n  value: `\nI  I\nII I\nIIII\nI II\nI  I\n`, width: 4\n};\n\nconst K = {\n  value: `\nI  I\nI I\nII\nI I\nI  I\n`, width: 4\n};\n\n// const P = {\n//     value: `\n// III\n// I I\n// III\n// I\n// I\n// `, width: 3\n// };\n\nconst R = {\n  value: `\nIII\nI I\nIII\nII\nI I\n`, width: 3\n};\n\nconst S = {\n  value: `\nIII\nI\nIII\n  I\nIII\n`, width: 3\n};\n\nconst T = {\n  value: `\nIII\n I\n I\n I\n I\n`, width: 3\n};\n\nconst SPACE = {\n  value: `\nO\nO\nO\nO\nO\n`, width: 1\n};\n\nconst SPACE8 = spaceN(8);\n\nfunction spaceN(n: number) {\n  return {\n    value: SPACE.value.split(/\\n/g).map(l => l.repeat(n)).join(\"\\n\"),\n    width: n\n  };\n}\n\nconst SNAKE: ReadonlyArray<Letter> = [SPACE8, S, N, A, K, E, SPACE8];\nconst TETRIS: ReadonlyArray<Letter> = [SPACE8, T, E, R, E, T, R, I, S, SPACE8];\n\nexport const Letters = Object.freeze({\n  SNAKE, TETRIS\n});\n","import { checkNonEmpty } from \"src/utils\";\nimport { I, O, S, W } from \"./graphic-types\";\nimport { Letters } from \"./letters\";\n\nconst FRAME_INTERVAL_MS = 300;\nconst SEPARATOR = \"\\n\";\n\nclass BackgroundAnimator {\n  private readonly backgroundSheet: ReadonlyArray<string>;\n  private readonly sheetWidth: number;\n  private readonly windowWidth: number;\n  private colIdx: number = 0;\n  private lastFrameTimestamp: number = Date.now();\n\n  constructor(letters: ReadonlyArray<Letter>, windowWidth: number) {\n    if (checkNonEmpty(letters).length === 0) {\n      throw new Error(\"Background letters is empty!\");\n    }\n    this.backgroundSheet = convertLettersToRows(letters, SEPARATOR)\n      .map(line => line.replace(/[\\s]/g, \"O\"));\n    this.sheetWidth = this.backgroundSheet[0].length;\n    if (windowWidth > this.sheetWidth) {\n      throw new Error(`Windows width ${windowWidth} is greater than sheet width ${this.sheetWidth}`);\n    }\n    this.windowWidth = windowWidth;\n  }\n\n  public setBackgroundFrame(frameBuffer: Uint8Array, offset: number): void { // todo: optimize\n    if (Date.now() - this.lastFrameTimestamp > FRAME_INTERVAL_MS) {\n      const backgroundWindow = this.backgroundSheet.map(line => line.substr(this.colIdx, this.windowWidth)).join(\"\");\n      for (let i = 0; i < backgroundWindow.length; i++) {\n        const p = backgroundWindow.charAt(i);\n        const fi = i + offset;\n        if (p === \"O\") {\n          frameBuffer[fi] = O;\n        } else if (p === \"I\") {\n          frameBuffer[fi] = I;\n        } else if (p === \"S\") {\n          frameBuffer[fi] = S;\n        }\n      }\n      this.shiftWindow();\n    }\n  }\n\n  private shiftWindow() {\n    if (this.colIdx + this.windowWidth >= this.sheetWidth) {\n      this.colIdx = 0;\n    } else {\n      this.colIdx++;\n    }\n    this.lastFrameTimestamp = Date.now();\n  }\n}\n\nfunction convertLettersToRows(letters: ReadonlyArray<Letter>, separator: string): ReadonlyArray<string> {\n  return letters.map(letter => alignLetter(letter, separator).value.split(separator))\n    .reduce((a, b) => a.map((l, i) => l + \" \" + b[i]));\n}\n\nfunction alignLetter(letter: Letter, separator: string): Letter {\n  return {\n    value: letter.value.split(separator)\n      .map(line => line + \" \".repeat(letter.width - line.length))\n      .join(separator),\n    width: letter.width\n  };\n}\n\nexport const BackgroundAnims = {\n  snake: new BackgroundAnimator(Letters.SNAKE, W),\n  tetris: new BackgroundAnimator(Letters.TETRIS, W),\n  _convertLettersToRows: convertLettersToRows\n};\n","import { H, I, O, W } from \"./graphic-types\";\nimport { List, Range } from \"immutable\";\nimport { Direction, Point } from \"src/domain\";\nimport { toIndex1 } from \"./graphic-utils\";\nimport { BackgroundAnims } from \"./animator\";\nimport { AnimType } from \"./anim\";\n\ntype Anim = import(\"./anim\").Anim;\n\nconst INITIAL_BODY = Range(2, 8).map(x => Point(x, H / 2 - 2)).toList();\nconst WORDS_OFFSET = (H / 2 + 1) * W;\nconst BORDER_FRAME = Range(0, (H / 2 + 1) * W).map(i => {\n  if (i <= W || i % W === 0 || (i + 1) % W === 0 || i > (H / 2) * W) {\n    return I;\n  } else {\n    return O;\n  }\n}).toList();\n\nclass SnakeAnimation implements Anim {\n  private readonly body: List<Point>;\n  private readonly di: Direction;\n  private readonly lastTail?: Point;\n\n  constructor(state?: List<Point>, direction?: Direction, lastTail?: Point) {\n    this.body = state === undefined ? INITIAL_BODY : state;\n    this.di = direction === undefined ? Direction.EAST : direction;\n    this.lastTail = lastTail;\n  }\n\n  advance(): Anim {\n    const h: Point = this.body.last();\n    let nx = h.x;\n    let ny = h.y;\n    let nd = this.di;\n    switch (this.di) {\n      case Direction.EAST:\n        if (h.x >= W - 3) {\n          ny = h.y - 1;\n          nd = Direction.NORTH;\n        } else {\n          nx = h.x + 1;\n        }\n        break;\n      case Direction.NORTH:\n        if (h.y === 2) {\n          nx = h.x - 1;\n          nd = Direction.WEST;\n        } else {\n          ny = h.y - 1;\n        }\n        break;\n      case Direction.WEST:\n        if (h.x === 2) {\n          ny = h.y + 1;\n          nd = Direction.SOUTH;\n        } else {\n          nx = h.x - 1;\n        }\n        break;\n      case Direction.SOUTH:\n        if (h.y >= (H / 2 - 2)) {\n          nx = h.x + 1;\n          nd = Direction.EAST;\n        } else {\n          ny = h.y + 1;\n        }\n    }\n    const nb = this.body.toSeq().concat(Point(nx, ny)).takeLast(this.body.size).toList();\n    const lt = this.body.first(undefined);\n    return new SnakeAnimation(nb, nd, lt);\n  }\n\n  currentFrame(frameBuffer: Uint8Array): Frame {\n    if (this.body === INITIAL_BODY) {\n      BORDER_FRAME.forEach((v, i) => frameBuffer[i] = v);\n    }\n    BackgroundAnims.snake.setBackgroundFrame(frameBuffer, WORDS_OFFSET);\n\n    this.body.forEach(p => {\n      const i = toIndex1(p);\n      if (frameBuffer[i] === O) {\n        frameBuffer[i] = I;\n      }\n    });\n    if (this.lastTail !== undefined) {\n      const i = toIndex1(this.lastTail);\n      if (frameBuffer[i] === I) {\n        frameBuffer[i] = O;\n      }\n    }\n\n    return List(frameBuffer);\n  }\n\n  isCompleted(): boolean {\n    return false;\n  }\n\n  get type() {\n    return AnimType.GAME_SNAKE;\n  }\n\n  get frameInterval() {\n    return 200;\n  }\n}\n\nexport const InitialSnakeAnimation: Anim = new SnakeAnimation();\n","import { List } from \"immutable\";\nimport { Orientation } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { Tetromino } from \"../games\";\nimport { TetrominoType } from \"../games/tetris-tetromino\";\nimport { AnimType } from \"./anim\";\nimport { BackgroundAnims } from \"./animator\";\nimport { H, I, O, W } from \"./graphic-types\";\nimport { toIndex2 } from \"./graphic-utils\";\n\ntype Anim = import(\"./anim\").Anim;\ntype Layout = { t: TetrominoType, o: Orientation, x: number, y: number };\n\nconst WORDS_OFFSET = (H / 2 + 1) * W;\nconst X = Specs.tetrisGame.initialX;\nconst Y = Specs.tetrisGame.initialY;\nconst TetrominoLayouts: ReadonlyArray<Layout> = Object.freeze([\n  { t: \"I\", o: Orientation.RIGHT, x: X - 4, y: Y - 2 },\n  { t: \"L\", o: Orientation.UP, x: X - 4, y: Y - 7 },\n  { t: \"T\", o: Orientation.RIGHT, x: X + 2, y: Y - 7 },\n  { t: \"S\", o: Orientation.RIGHT, x: X - 1, y: Y - 7 },\n  { t: \"O\", o: Orientation.UP, x: X + 2, y: Y - 3 },\n]);\n\nclass TetrisAnimation implements Anim {\n  isCompleted(): boolean {\n    return false;\n  }\n  advance(): Anim {\n    return new TetrisAnimation();\n  }\n  currentFrame(frameBuffer: Uint8Array): Frame {\n    if (this === InitialTetrisAnimation) {\n      frameBuffer.fill(O);\n      TetrominoLayouts.map(l => Tetromino.new(l.t, l.o, l.x, l.y)).forEach(t => {\n        t.render().forEach(p => frameBuffer[toIndex2(p)] = I);\n      });\n    }\n    BackgroundAnims.tetris.setBackgroundFrame(frameBuffer, WORDS_OFFSET);\n    return List(frameBuffer);\n  }\n\n  get type() {\n    return AnimType.GAME_TETRIS;\n  }\n  get frameInterval() {\n    return 400;\n  }\n}\n\nexport const InitialTetrisAnimation: Anim = new TetrisAnimation();\n","import { InitialConsoleStartAnimation } from \"./animation-console-start\";\nimport { InitialSnakeAnimation } from \"./animation-snake\";\nimport { InitialTetrisAnimation } from \"./animation-tetris\";\nimport { BLANK_FRAME } from \"./graphic-types\";\n\nexport interface Anim {\n    readonly type: AnimType;\n    readonly frameInterval: number;\n    isCompleted(): boolean;\n    advance(): Anim;\n    currentFrame(frameBuffer: Uint8Array): Frame;\n}\n\nexport const enum AnimType {\n    DUMMY = \"animation - dummy\",\n    CONSOLE_START = \"animation - console start\",\n    GAME_SNAKE = \"animation - game snake\",\n    GAME_TETRIS = \"animation - game tetris\",\n    GAME_BOXER = \"animation - game boxer\",\n}\n\nconst emptyAnim: Anim = {\n    type: AnimType.DUMMY,\n    frameInterval: 1000,\n    isCompleted: () => true,\n    advance: () => emptyAnim,\n    currentFrame: () => BLANK_FRAME,\n};\n\nexport const Animations = Object.freeze({\n    emptyAnim,\n    consoleStartInitial: InitialConsoleStartAnimation,\n    snakeInitial: InitialSnakeAnimation,\n    tetrisInitial: InitialTetrisAnimation,\n});\n","import { Map } from \"immutable\";\nimport { GameType, SystemStatus, GameStatus } from \"src/domain\";\nimport { Anim, Animations } from \"../graphic\";\n\nexport interface CoreState {\n  readonly status: SystemStatus;\n  readonly scores: Map<GameType, number>;\n  readonly counts: Map<GameType, number>;\n  readonly maxScores: Map<GameType, number>;\n  readonly level: Map<GameType, number>;\n  readonly gameType: GameType;\n  readonly gameStatus: GameStatus;\n  readonly anim: Anim;\n  readonly audioEnabled: boolean;\n\n  getLevel(): number;\n  getScore(): number;\n  getCount(): number;\n  isPaused(): boolean;\n}\n\nconst DefaultCoreState: CoreState = Object.freeze({\n  status: SystemStatus.STARTING,\n  scores: Map<GameType, number>(),\n  counts: Map<GameType, number>(),\n  maxScores: Map<GameType, number>(),\n  level: Map([[GameType.SNAKE, 3], [GameType.TETRIS, 3]]),\n  gameType: GameType.TETRIS,\n  gameStatus: GameStatus.STOPPED,\n  anim: Animations.emptyAnim,\n  audioEnabled: true,\n  getLevel(): number {\n    return this.level.get(this.gameType, 3);\n  },\n  getScore(): number {\n    return this.scores.get(this.gameType, 0);\n  },\n  getCount(): number {\n    return this.counts.get(this.gameType, 0);\n  },\n  isPaused,\n});\n\nfunction isPaused(this: CoreState) {\n  return (this.gameStatus === GameStatus.PAUSED) || (this.gameStatus === GameStatus.TO_QUIT);\n}\n\nexport const CoreState = Object.freeze({\n  Default: DefaultCoreState\n});\n","import produce from \"immer\";\nimport { checkStrictEqual, checkStrictNonEqual, nextEnum } from \"src/utils\";\nimport { ActionType } from \"../action\";\nimport { Specs } from \"src/specs\";\nimport { GameType, SystemStatus, GameStatus } from \"src/domain\";\nimport { Anim, Animations } from \"../graphic\";\nimport { CoreState } from \"./core-state\";\n\nconst GameTypeValues: ReadonlyArray<GameType> = Object.keys(GameType).map(key => GameType[key]);\n\nexport function coreReducer(state: CoreState = CoreState.Default, action: CoreAction): CoreState {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ActionType.ADD_SCORE:\n        draft.scores = state.scores.update(state.gameType, prev => add(prev, action.payload.score));\n        draft.counts = state.counts.update(state.gameType, prev => add(prev, action.payload.count));\n        break;\n      case ActionType.INCREASE_LEVEL:\n        const li = state.getLevel();\n        draft.level = state.level.set(state.gameType, li >= Specs.core.maxLevel ? 1 : li + 1);\n        break;\n      case ActionType.DECREASE_LEVEL:\n        const ld = state.getLevel();\n        draft.level = state.level.set(state.gameType, ld <= 1 ? Specs.core.maxLevel : ld - 1);\n        break;\n      case ActionType.CONSOLE_START:\n        draft.anim = Animations.consoleStartInitial;\n        break;\n      case ActionType.CONSOLE_ANIMATE:\n        if (draft.anim.isCompleted()) {\n          if (state.status === SystemStatus.STARTING) {\n            draft.status = SystemStatus.MENU;\n          }\n          draft.anim = currentAnimation(state);\n        } else {\n          draft.anim = draft.anim.advance();\n        }\n        break;\n      case ActionType.TOGGLE_PAUSE:\n        checkStrictEqual(state.status, SystemStatus.IN_GAME, \"cannot pause game if not in game.\");\n        draft.gameStatus = state.gameStatus === GameStatus.RUNNING ? GameStatus.PAUSED : GameStatus.RUNNING;\n        break;\n      case ActionType.ENTER_GAME:\n        checkStrictEqual(state.status, SystemStatus.MENU, \"can only enter game from menu.\");\n        draft.scores = state.scores.set(state.gameType, 0);\n        draft.counts = state.counts.set(state.gameType, 0);\n        draft.anim = Animations.emptyAnim;\n        draft.status = SystemStatus.IN_GAME;\n        draft.gameStatus = GameStatus.RUNNING;\n        break;\n      case ActionType.EXIT_GAME:\n        checkStrictEqual(state.status, SystemStatus.IN_GAME, \"cannot exit game if not in game.\");\n        draft.status = SystemStatus.MENU;\n        draft.maxScores = state.scores.mergeWith(maxFunc, state.maxScores);\n        break;\n      case ActionType.TOGGLE_GAME:\n        checkStrictNonEqual(state.status, SystemStatus.IN_GAME, \"cannot toggle game when in game.\");\n        draft.gameType = nextEnum(state.gameType, GameTypeValues);\n        draft.anim = currentAnimation(draft as CoreState);\n        break;\n      case ActionType.QUIT_GAME:\n        draft.gameStatus = action.payload ? GameStatus.STOPPED : GameStatus.TO_QUIT;\n        break;\n      case ActionType.ENABLE_SOUND:\n        draft.audioEnabled = true;\n        break;\n      case ActionType.DISABLE_SOUND:\n        draft.audioEnabled = false;\n        break;\n    }\n  }\n  );\n}\n\nfunction add(prevScore: number | undefined, payload: number): number {\n  const base = prevScore ? prevScore : 0;\n  return base + Math.round(payload);\n}\n\nfunction maxFunc(s1: number | undefined, s2: number | undefined) {\n  const v1 = s1 ? s1 : 0;\n  const v2 = s2 ? s2 : 0;\n  return Math.max(v1, v2);\n}\n\nfunction currentAnimation(state: CoreState): Anim {\n  let nextAnim = Animations.emptyAnim;\n  switch (state.status) {\n    case SystemStatus.STARTING:\n    case SystemStatus.MENU:\n      switch (state.gameType) {\n        case GameType.SNAKE:\n          nextAnim = Animations.snakeInitial;\n          break;\n        case GameType.TETRIS:\n          nextAnim = Animations.tetrisInitial;\n      }\n  }\n  return nextAnim;\n}\n","import {combineEpics} from \"redux-observable\";\nimport {keyboardEpic} from \"./keyboard-epic\";\nimport {coreEpic as _coreEpic} from \"./core-epic\";\n\nexport {CoreActions} from \"../action/core-actions\";\nexport {coreReducer} from \"./core-reducer\";\nexport {KeyboardActions} from \"../action/keyboard-actions\";\nexport {keyboardEpic} from \"./keyboard-epic\";\n\nexport const coreEpic = combineEpics(_coreEpic.epic, keyboardEpic.epic);\n","import { GameStatus, GameType } from \"src/domain\";\nimport { ActionType } from \"../action\";\nimport { filter, withLatestFrom, map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { Observable, timer } from \"rxjs\";\n\nexport function heartbeatFunc(gameType: GameType,\n                              baseInterval: number,\n                              triggerActionTypes: ReadonlyArray<ActionType>,\n                              stopActionTypes: ReadonlyArray<ActionType>,\n                              actionMapFunc: (state: AppState) => AppAction) {\n  return (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n    return action$.pipe(\n      filter(a => a.type === ActionType.ENTER_GAME || triggerActionTypes.includes(a.type)),\n      withLatestFrom(state$),\n      map(([, s]) => s),\n      filter(s => s.core.gameType === gameType),\n      switchMap(state => {\n        const interval = baseInterval - state.core.getLevel() * 100;\n        return timer(interval, interval).pipe(\n          takeUntil(action$.pipe(filter(a => a.type === ActionType.EXIT_GAME || stopActionTypes.includes(a.type)))),\n          withLatestFrom(state$),\n          map(([, s]) => s),\n          filter(s => s.core.gameStatus === GameStatus.RUNNING),\n          map(actionMapFunc)\n        );\n      }),\n    );\n  };\n}\n","import { combineEpics, ofType } from \"redux-observable\";\nimport { Observable } from \"rxjs\";\nimport { delay, filter, map, mapTo, withLatestFrom } from \"rxjs/operators\";\nimport { Direction, Point, GameType } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { ActionType, SnakeActions } from \"../action\";\nimport { CoreActions } from \"../core\";\nimport { heartbeatFunc } from \"./common-epic\";\n\nfunction nextCreepAction(appState: AppState): SnakeAction {\n  let action: AppAction;\n  const s: SnakeGameState = appState.snake;\n  const head = newHeadPoint(s.direction, s.body.last()); // last is head\n  if (head.equals(s.hole)) {\n    action = SnakeActions.escape(0);\n  } else if (isHittingWall(head)) {\n    action = SnakeActions.hitWall();\n  } else if (s.body.contains(head)) {\n    action = SnakeActions.biteSelf();\n  } else {\n    const grown = head.equals(s.bean);\n    action = SnakeActions.creep(head, grown);\n  }\n  return action;\n}\nconst BASIC_INTERVAL = Specs.snakeGame.baseCreepIntervalMs;\nconst creepEpic = heartbeatFunc(\n  GameType.SNAKE, BASIC_INTERVAL, [ActionType.GAME_NEXT_LEVEL], [ActionType.SNAKE_ESCAPE], nextCreepAction);\n\nfunction newHeadPoint(direction: Direction, head: Point): Point {\n  switch (direction) {\n    case Direction.NORTH:\n      return Point(head.x, head.y - 1);\n    case Direction.EAST:\n      return Point(head.x + 1, head.y);\n    case Direction.SOUTH:\n      return Point(head.x, head.y + 1);\n    case Direction.WEST:\n      return Point(head.x - 1, head.y);\n    default:\n      throw new TypeError(\"UnknownDirection:\" + direction);\n  }\n}\n\nfunction isHittingWall(head: Point): boolean {\n  return head.x < 1 || head.x >= Specs.screen.graphicWidth - 1 || head.y < 1 || head.y >= Specs.screen.graphicHeight - 1;\n}\n\nconst SCORE_BASE = Specs.snakeGame.baseScore;\nconst scoreEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  return action$.pipe(\n    filter(a => (a.type === ActionType.SNAKE_CREEP && a.payload.grown) || a.type === ActionType.GAME_WIN),\n    withLatestFrom(state$),\n    map(([a, s]) => {\n      const level = s.core.getLevel();\n      const bodyLength = s.snake.body.size;\n      const winBonus = a.type === ActionType.GAME_WIN ? 3 : 1;\n      const score = SCORE_BASE * bodyLength + SCORE_BASE * level;\n      return CoreActions.addScore(score * winBonus, 1);\n    }),\n  );\n};\n\nconst ESCAPE_INTERVAL = Specs.snakeGame.escapeAnimationIntervalMs;\nconst escapeEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.SNAKE_ESCAPE),\n    map(a => {\n      if (a.type === ActionType.SNAKE_ESCAPE) {\n        return a.payload;\n      } else {\n        throw new TypeError(\"Assertion error: impossible to reach here!\");\n      }\n    }),\n    delay(ESCAPE_INTERVAL),\n    withLatestFrom(state$),\n    map(([step, s]) => {\n      return s.snake.body.size <= 0 ? CoreActions.win() : SnakeActions.escape(step + 1);\n    }),\n  );\n};\n\nconst exitEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.SNAKE_HIT_WALL, ActionType.SNAKE_BITE_SELF),\n    withLatestFrom(state$),\n    filter(([, s]) => s.snake.life < 1),\n    mapTo(CoreActions.exitGame())\n  );\n};\n\nexport const snakeEpic = {\n  epic: combineEpics(creepEpic, scoreEpic, escapeEpic, exitEpic),\n  _scoreEpic: scoreEpic,\n  _escapeEpic: escapeEpic,\n  _nextCreepAction: nextCreepAction,\n  _exitEpic: exitEpic,\n  BASIC_INTERVAL,\n  SCORE_BASE,\n  ESCAPE_INTERVAL\n};\n","import { combineEpics, ofType, StateObservable } from \"redux-observable\";\nimport { Observable, of } from \"rxjs\";\nimport { mapTo, tap, filter, map, delay, concatMap, withLatestFrom } from \"rxjs/operators\";\nimport { GameType } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { ActionType, CoreActions } from \"../action\";\nimport { TetrisActions } from \"../action/tetris-actions\";\nimport { heartbeatFunc } from \"./common-epic\";\n\nconst exitGameEpic = (action$: Observable<AppAction>, state$: StateObservable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.EXIT_GAME, ActionType.QUIT_GAME),\n    tap(() => state$.value.tetris.deposit.clear()),\n    filter(() => false),\n  );\n};\n\nfunction nextDescendAction(appState: AppState): TetrisAction {\n  const s = appState.tetris;\n  let a: TetrisAction;\n  if (s.block.shouldLock()) {\n    a = TetrisActions.lockDown();\n  } else {\n    a = TetrisActions.descend(\"auto\");\n  }\n  return a;\n}\nconst descendEpic = heartbeatFunc(\n  GameType.TETRIS,\n  Specs.tetrisGame.baseDescendIntervalMs,\n  [ActionType.GAME_NEXT_LEVEL, ActionType.TETRIS_NEXT_BLOCK],\n  [ActionType.TETRIS_LINE_MARK_PAUSE],\n  nextDescendAction);\n\nconst manualDescendLockEpic = (action$: Observable<AppAction>, state$: StateObservable<AppState>) => {\n  return action$.pipe(\n    filter(a => a.type === ActionType.TETRIS_DESCEND && a.payload === \"manual\"),\n    filter(() => state$.value.tetris.block.shouldLock()),\n    mapTo(TetrisActions.lockDown()),\n  );\n};\n\nconst hardDropEpic = (action$: Observable<AppAction>) => {\n  return action$.pipe(\n    ofType(ActionType.TETRIS_HARD_DROP),\n    /* state updated in reducer */\n    mapTo(TetrisActions.lockDown()),\n  );\n};\n\nconst lockDownEpic = (action$: Observable<AppAction>, state$: StateObservable<AppState>) => {\n  return action$.pipe(\n    ofType(ActionType.TETRIS_LOCK_DOWN),\n    /* state updated in reducer */\n    tap(() => state$.value.tetris.block.lockDown()),\n    mapTo(state$.value.tetris.deposit),\n    map(depo => {\n      const ys = depo.fullLines();\n      if (ys.length === 0) {\n        return depo.isOverflow() ? TetrisActions.overflow() : TetrisActions.nextBlock();\n      } else {\n        depo.clearLines(ys, \"mark\");\n        return TetrisActions.lineMarkPause(ys);\n      }\n    }),\n  );\n};\n\nconst LINE_CLEAR_PAUSE_DURATION = Specs.tetrisGame.markClearPauseDurationMs;\nconst lineMarkEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  const t = ActionType.TETRIS_LINE_MARK_PAUSE;\n  return action$.pipe(\n    ofType(t),\n    delay(LINE_CLEAR_PAUSE_DURATION),\n    map(a => a.type === t && a.payload || []),\n    withLatestFrom(state$),\n    concatMap(([lines, s]) => s.tetris.floorCount > Specs.tetrisGame.winFloorCountPerLevel ?\n      of(TetrisActions.lineClear(lines), CoreActions.win()) : of(TetrisActions.lineClear(lines))\n    ),\n  );\n};\n\nconst lineClearEpic = (action$: Observable<AppAction>, state$: Observable<AppState>) => {\n  const t = ActionType.TETRIS_LINE_CLEAR;\n  return action$.pipe(\n    ofType(t),\n    withLatestFrom(state$),\n    tap(([a, s]) => a.type === t && s.tetris.deposit.clearLines(a.payload, \"clear\")),\n    mapTo(TetrisActions.nextBlock()),\n  );\n};\n\nconst SCORE_BASE = Specs.tetrisGame.baseScore;\nconst scoreEpic = (action$: Observable<AppAction>) => {\n  const t = ActionType.TETRIS_LINE_CLEAR;\n  return action$.pipe(\n    ofType(t),\n    map(a => {\n      const lineCnt = a.type === t && a.payload.length || 0;\n      const score = SCORE_BASE * Math.pow(lineCnt, 1.5);\n      return CoreActions.addScore(score, 1);\n    }),\n  );\n};\n\nconst overflowEpic = (action$: Observable<AppAction>) => {\n  return action$.pipe(\n    ofType(ActionType.TETRIS_OVERFLOW),\n    mapTo(CoreActions.exitGame()),\n  );\n};\n\nexport const tetrisEpic = Object.freeze({\n  epic: combineEpics(exitGameEpic, descendEpic, hardDropEpic, lockDownEpic, manualDescendLockEpic,\n    lineMarkEpic, lineClearEpic, scoreEpic, overflowEpic),\n});\n","import {Direction, Point} from \"src/domain\";\nimport {List, Range} from \"immutable\";\nimport {Specs} from \"src/specs\";\n\nconst INITIAL_LENGTH = 5;\n\nexport interface SnakeGameState {\n    readonly body: List<Point>;\n    readonly direction: Direction;\n    readonly life: number;\n    readonly bean?: Point;\n    readonly hole?: Point;\n}\n\nconst DefaultSnakeGameState: SnakeGameState = Object.freeze({\n    body: initialBody(),\n    direction: Direction.NORTH,\n    life: 3\n});\n\nfunction initialBody(): List<Point> {\n    const tailY = Specs.screen.graphicHeight - 2;\n    const tailX = tailY - INITIAL_LENGTH;\n    return Range(tailX, tailY).reverse().map(y => {\n        return Point(3, y);\n    }).toList();\n}\n\nexport const SnakeGameState = Object.freeze({\n  Default: DefaultSnakeGameState\n});\n","import produce from \"immer\";\nimport { List, Range } from \"immutable\";\nimport { SnakeGameState } from \"./snake-state\";\nimport { ActionType } from \"../action\";\nimport { isOppositeDirection, Point } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { randomInt } from \"src/utils\";\n\nconst WIN_BODY_LENGTH = Specs.snakeGame.winBodyLength;\n\nexport function snakeGameReducer(state: SnakeGameState = SnakeGameState.Default, action: AppAction): SnakeGameState {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ActionType.SET_DIRECTION:\n        if (!isOppositeDirection(state.direction, action.payload) && state.direction !== action.payload) {\n          draft.direction = action.payload;\n        }\n        return;\n      case ActionType.SNAKE_CREEP:\n        const { head, grown } = action.payload;\n        const length = state.body.size;\n        const body = state.body.toSeq().concat(head).takeLast(grown ? length + 1 : length).toList();\n        draft.body = body;\n        if (body.size >= WIN_BODY_LENGTH) {\n          draft.hole = state.hole ? state.hole : border.get(randomInt(border.size - 1));\n          draft.bean = undefined;\n        } else {\n          draft.bean = grown ? undefined : (state.bean ? state.bean : generateBean(body));\n        }\n        return;\n      case ActionType.SNAKE_HIT_WALL:\n      case ActionType.SNAKE_BITE_SELF:\n        return {\n          ...SnakeGameState.Default,\n          life: state.life - 1,\n        };\n      case ActionType.SNAKE_ESCAPE:\n        draft.body = state.body.takeLast(state.body.size - 1);\n        return;\n      case ActionType.GAME_WIN:\n        draft.body = SnakeGameState.Default.body;\n        draft.direction = SnakeGameState.Default.direction;\n        draft.hole = undefined;\n        return;\n      default:\n        return;\n    }\n  });\n}\n\nconst beginX = 1;\nconst beginY = 1;\nconst endX = Specs.screen.graphicWidth - 1;\nconst endY = Specs.screen.graphicHeight - 1;\n\nfunction generateBean(body: List<Point>): Point | undefined {\n  if (Math.random() > Specs.snakeGame.beanProduceChance) {\n    const bean = Point(randomInt(endX, beginX), randomInt(endY, beginY));\n    if (!body.contains(bean)) {\n      return bean;\n    }\n  }\n  return undefined;\n}\n\nconst border = (() => {\n  const top = Range(beginX, endX).map(x => Point(x, 0));\n  const bottom = Range(beginX, endX).map(x => Point(x, endY));\n  const left = Range(beginY, endY).map(y => Point(0, y));\n  const right = Range(beginY, endY).map(y => Point(endX, y));\n  return top.concat(bottom, left, right).toList();\n})();\n","export const enum Direction {\n    NORTH = \"NORTH\",\n    EAST = \"EAST\",\n    SOUTH = \"SOUTH\",\n    WEST = \"WEST\"\n}\n\nexport function isOppositeDirection(d1: Direction, d2: Direction): boolean {\n    switch (d1) {\n        case Direction.NORTH:\n            return d2 === Direction.SOUTH;\n        case Direction.EAST:\n            return d2 === Direction.WEST;\n        case Direction.SOUTH:\n            return d2 === Direction.NORTH;\n        case Direction.WEST:\n            return d2 === Direction.WEST;\n        default:\n            throw new TypeError(\"UnknownDirection:\" + d1);\n    }\n}\n","import { Specs } from \"src/specs\";\nimport { findIndexOfLast } from \"src/utils\";\nimport { Point } from \"src/domain\";\n\ntype ClearMode = \"mark\" | \"clear\";\n\n/** Stateful & Mutable */\nexport interface TetrisDeposit {\n  check(x: number, y: number): boolean;\n  mark(x: number, y: number): void;\n  dropDistance(p: Point): number;\n  render(func: (buffer: ReadonlyArray<Uint8Array>) => void): void;\n  /** Return Y-indices of lines that are full. */\n  fullLines(): ReadonlyArray<number>;\n  isOverflow(): boolean;\n  clearLines(ys: ReadonlyArray<number>, mode: ClearMode): void;\n  clear(...points: Point[]): void;\n}\n\nexport interface TestTetrisDeposit extends TetrisDeposit {\n  buffer: ReadonlyArray<Uint8Array>;\n  _set(...points: Point[]): void;\n  _setLines(...ys: number[]): void;\n  _with(point: Point, callback: () => void): void;\n}\n\nclass _TetrisDeposit implements TetrisDeposit, TestTetrisDeposit {\n  readonly buffer: Uint8Array[];\n  private readonly yCap: number;\n  private _isOverflow = false;\n\n  constructor(xCap: number, yCap: number) {\n    this.yCap = yCap;\n    this.buffer = Array(yCap).fill(0).map(() => new Uint8Array(new ArrayBuffer(xCap)).fill(0));\n  }\n\n  check(x: number, y: number): boolean {\n    return y < this.yCap && this.buffer[y][x] > 0;\n  }\n  mark(x: number, y: number): void {\n    if (y >= this.yCap) {\n      this._isOverflow = true;\n    } else {\n      this.buffer[y][x] = 1;\n    }\n  }\n  dropDistance(p: Point): number {\n    return findIndexOfLast(this.buffer, (row, y) => y <= p.y && row[p.x] > 0);\n  }\n  render(func: (buffer: ReadonlyArray<Uint8Array>) => void): void {\n    func(this.buffer);\n  }\n  fullLines() {\n    return this.buffer.map((row, y) => row.includes(0) ? -1 : y).filter(y => y >= 0);\n  }\n  isOverflow() {\n    return this._isOverflow;\n  }\n  clearLines(ys: ReadonlyArray<number>, mode: ClearMode) {\n    switch (mode) {\n      case \"mark\":\n        ys.map(y => this.buffer[y].fill(2));\n        break;\n      case \"clear\":\n        const clearLines = ys.map(y => this.buffer[y].fill(0));\n        const retainLines = this.buffer.filter((_, y) => !ys.includes(y));\n        retainLines.forEach((row, y) => this.buffer[y] = row);\n        clearLines.forEach((row, y) => this.buffer[y + retainLines.length] = row);\n        break;\n    }\n  }\n  clear(...points: Point[]) {\n    if (points.length === 0) {\n      this.buffer.forEach(row => row.fill(0));\n      this._isOverflow = false;\n    } else {\n      points.forEach(p => this.buffer[p.y][p.x] = 0);\n    }\n  }\n\n  _set(...points: Point[]) {\n    points.forEach(p => this.buffer[p.y][p.x] = 1);\n  }\n  _setLines(...ys: number[]) {\n    ys.forEach(y => this.buffer[y].fill(1));\n  }\n  _with(point: Point, callback: () => void) {\n    this._set(point);\n    callback();\n    this.clear();\n  }\n}\n\nconst singleton: TetrisDeposit = new _TetrisDeposit(Specs.screen.graphicWidth, Specs.screen.graphicHeight + 1);\nif (process.env.NODE_ENV === \"development\") { // todo: remove block\n  const s = singleton as TestTetrisDeposit;\n  s._setLines(0);\n  s.clear(Point(2, 0));\n}\n\nexport const TetrisDeposit = Object.freeze({\n  getInstance: () => singleton,\n  _new(width: number, height: number): TestTetrisDeposit {\n    return new _TetrisDeposit(width, height);\n  }\n});\n","import { Set, Range } from \"immutable\";\nimport { Orientation, Point, rotateOrientation } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { randomInt } from \"src/utils\";\nimport { TetrisDeposit } from \"./tetris-deposit\";\nimport { createSelector } from \"reselect\";\n\nexport interface Tetromino {\n  moveLeft(): Tetromino;\n  moveRight(): Tetromino;\n  rotate(): Tetromino;\n  descend(): Tetromino;\n  hardDrop(): Tetromino;\n  render(): Set<Point>;\n  renderBase(): Set<Point>;\n  shouldLock(): boolean;\n  lockDown(): void;\n}\nexport interface Tetromino {\n  width: number;\n  height: number;\n  _x: number;\n  _y: number;\n  _orientation: Orientation;\n}\n\nexport type TetrominoType = \"I\" | \"L\" | \"J\" | \"T\" | \"S\" | \"Z\" | \"O\";\ninterface Base {\n  readonly type: TetrominoType;\n  readonly body: Set<Point>;\n  readonly width: number;\n  readonly height: number;\n}\nconst I = buildBase(\"I\", Point(0, 0), Point(0, 1), Point(0, 2), Point(0, 3));\nconst I_h = buildBase(\"I\", Point(0, 0), Point(1, 0), Point(2, 0), Point(3, 0));\nconst L = buildBase(\"L\", Point(0, 0), Point(0, 1), Point(0, 2), Point(1, 0));\nconst L_m90 = buildBase(\"L\", Point(0, 0), Point(1, 0), Point(2, 0), Point(2, 1));\nconst L_90 = buildBase(\"L\", Point(0, 0), Point(0, 1), Point(1, 1), Point(2, 1));\nconst L_180 = buildBase(\"L\", Point(0, 2), Point(1, 2), Point(1, 1), Point(1, 0));\nconst J = buildBase(\"J\", Point(0, 0), Point(1, 0), Point(1, 1), Point(1, 2));\nconst J_m90 = buildBase(\"J\", Point(2, 0), Point(0, 1), Point(1, 1), Point(2, 1));\nconst J_90 = buildBase(\"J\", Point(0, 0), Point(0, 1), Point(1, 0), Point(2, 0));\nconst J_180 = buildBase(\"J\", Point(0, 0), Point(0, 1), Point(0, 2), Point(1, 2));\nconst T = buildBase(\"T\", Point(1, 0), Point(0, 1), Point(1, 1), Point(2, 1));\nconst T_m90 = buildBase(\"T\", Point(0, 0), Point(0, 1), Point(1, 1), Point(0, 2));\nconst T_90 = buildBase(\"T\", Point(0, 1), Point(1, 0), Point(1, 1), Point(1, 2));\nconst T_180 = buildBase(\"T\", Point(0, 0), Point(1, 0), Point(2, 0), Point(1, 1));\nconst S = buildBase(\"S\", Point(0, 0), Point(1, 0), Point(1, 1), Point(2, 1));\nconst S_v = buildBase(\"S\", Point(0, 1), Point(1, 1), Point(1, 0), Point(0, 2));\nconst Z = buildBase(\"Z\", Point(0, 1), Point(1, 1), Point(1, 0), Point(2, 0));\nconst Z_v = buildBase(\"Z\", Point(0, 0), Point(1, 1), Point(0, 1), Point(1, 2));\nconst O = buildBase(\"O\", Point(0, 0), Point(0, 1), Point(1, 1), Point(1, 0));\n\nfunction buildBase(type: TetrominoType, ...points: Point[]): Base {\n  const xs = points.map(p => p.x).sort();\n  const width = xs[xs.length - 1] - xs[0] + 1;\n  const ys = points.map(p => p.y).sort();\n  const height = ys[ys.length - 1] - ys[0] + 1;\n  return Object.freeze({ type, body: Set(points), width, height });\n}\n\nconst Repo = Object.freeze({\n  [Orientation.UP]: { I, L, J, T, S, Z, O },\n  [Orientation.LEFT]: { I: I_h, L: L_m90, J: J_m90, T: T_m90, S: S_v, Z: Z_v, O },\n  [Orientation.RIGHT]: { I: I_h, L: L_90, J: J_90, T: T_90, S: S_v, Z: Z_v, O },\n  [Orientation.DOWN]: { I, L: L_180, J: J_180, T: T_180, S, Z, O },\n});\n\nconst MAX_X = Specs.screen.graphicWidth - 1;\n/** Immutable */\nclass _Tetromino implements Tetromino {\n  private readonly body: Set<Point>;\n  constructor(\n    private readonly depo: TetrisDeposit,\n    private readonly base: Base,\n    private readonly orientation: Orientation,\n    private readonly x: number,\n    private readonly y: number) {\n    this.body = base.body.map(p => Point(p.x + x, p.y + y));\n  }\n\n  moveRight(): Tetromino {\n    let moved: Tetromino;\n    if ((this.x + this.width) > MAX_X) moved = this;\n    else if (this.body.find(p => this.depo.check(p.x + 1, p.y))) moved = this;\n    else moved = new _Tetromino(this.depo, this.base, this.orientation, this.x + 1, this.y);\n    return moved;\n  }\n  moveLeft(): Tetromino {\n    let moved: Tetromino;\n    if (this.x <= 0) moved = this;\n    else if (this.body.find(p => this.depo.check(p.x - 1, p.y))) moved = this;\n    else moved = new _Tetromino(this.depo, this.base, this.orientation, this.x - 1, this.y);\n    return moved;\n  }\n  rotate(): Tetromino {\n    const o = rotateOrientation(this.orientation, 90);\n    const base: Base = Repo[o][this.base.type];\n    const offX = Math.max(this.x + base.width - MAX_X - 1, 0);\n    const moved = new _Tetromino(this.depo, base, o, this.x - offX, this.y);\n    return moved.body.find(p => this.depo.check(p.x, p.y)) ? this : moved;\n  }\n  descend(): _Tetromino {\n    return new _Tetromino(this.depo, this.base, this.orientation, this.x, this.y - 1);\n  }\n  hardDrop(): Tetromino { // todo: optimize algorithm\n    const xs = Range(this.x, this.x + this.base.width);\n    const lowestBody = xs.map(x => this.body.toSeq().filter(p => p.x === x).minBy(p => p.y) as Point);\n    const depositYs = lowestBody.toSeq().map(p => this.depo.dropDistance(p)).toList();\n    const bodyYs = lowestBody.map(p => p.y);\n    const minY = depositYs.zip(bodyYs).map(([dy, by]) => by - dy).min() as number;\n    return new _Tetromino(this.depo, this.base, this.orientation, this.x, this.y - minY + 1);\n  }\n  render(): Set<Point> {\n    return this.body;\n  }\n  renderBase() {\n    return this.base.body;\n  }\n  shouldLock(): boolean {\n    return this.y <= 0 || this.body.find(p => this.depo.check(p.x, p.y - 1)) !== undefined;\n  }\n  lockDown(): void {\n    this.body.forEach(p => this.depo.mark(p.x, p.y));\n  }\n\n  get _x(): number {\n    return this.x;\n  }\n  get _y(): number {\n    return this.y;\n  }\n  get _orientation() {\n    return this.orientation;\n  }\n  get width() {\n    return this.base.width;\n  }\n  get height() {\n    return this.base.height;\n  }\n}\n\nconst DummyTetromino: Tetromino = Object.freeze({\n  moveLeft() { return this; },\n  moveRight() { return this; },\n  rotate() { return this; },\n  descend() { return this; },\n  hardDrop() { return this; },\n  render() { return Set(); },\n  renderBase() { return Set(); },\n  shouldLock() { return false; },\n  lockDown: () => null,\n  _x: -1,\n  _y: -1,\n  _orientation: Orientation.UP,\n  width: -1,\n  height: -1\n});\n\nconst probabilityEntries = Object.entries(Specs.tetrisGame.probability) as ReadonlyArray<[TetrominoType, number]>;\nconst PROBABILITY_TOP = Object.values(Specs.tetrisGame.probability).reduce((n1, n2) => n1 + n2);\n\nfunction randomTetromino(): Tetromino {\n  let n = randomInt(PROBABILITY_TOP);\n  for (const [k, v] of probabilityEntries) {\n    n -= v;\n    if (n <= 0) {\n      return memorisedCreateTetromino(k);\n    }\n  }\n  throw Error(\"Assertion error: tetris PROBABILITY_TOP is invalid!\");\n}\n\nfunction createTetromino(type: TetrominoType,\n                         orientation: Orientation,\n                         x: number,\n                         y: number,\n                         depo: TetrisDeposit = TetrisDeposit.getInstance()): Tetromino {\n  return new _Tetromino(depo, Repo[orientation][type], orientation, x, y);\n}\nconst memorisedCreateTetromino = createSelector(\n  (type: TetrominoType) => type,\n  t => createTetromino(t, Orientation.UP, Specs.tetrisGame.initialX, Specs.tetrisGame.initialY)\n);\n\nexport const Tetromino = Object.freeze({\n  nextRandom: randomTetromino,\n  dummy: DummyTetromino,\n  new: createTetromino,\n  _MAX_X: MAX_X,\n});\n","export const enum Orientation {\n  UP = 0, LEFT = -90, DOWN = 180, RIGHT = 90\n}\n\nexport type RotationDegree = -90 | 90 | 180;\n\nexport function rotateOrientation(o: Orientation, degree: RotationDegree): Orientation {\n  let next = o + degree;\n  if (next > 180) {\n    next = next - 360;\n  } else if (next < -90) {\n    next = next + 360;\n  }\n  return next;\n}\n","import { Tetromino } from \"./tetris-tetromino\";\nimport { TetrisDeposit } from \"./tetris-deposit\";\n\nexport interface TetrisGameState {\n  readonly deposit: TetrisDeposit;\n  readonly block: Tetromino;\n  readonly nextBlock: Tetromino;\n  readonly floorCount: number;\n}\n\nconst DefaultTetrisGameState: TetrisGameState = Object.freeze({\n  deposit: TetrisDeposit.getInstance(),\n  block: Tetromino.nextRandom(),\n  nextBlock: Tetromino.nextRandom(),\n  floorCount: 0,\n});\n\nexport const TetrisGameState = Object.freeze({\n  Default: DefaultTetrisGameState,\n});\n","import produce from \"immer\";\nimport { ActionType } from \"../action\";\nimport { TetrisAction } from \"../action/tetris-actions\";\nimport { TetrisGameState } from \"./tetris-state\";\nimport { Tetromino } from \"./tetris-tetromino\";\nimport { Specs } from \"src/specs\";\n\nconst winFLoorCount = Specs.tetrisGame.winFloorCountPerLevel;\n\nexport function tetrisGameReducer(state: TetrisGameState = TetrisGameState.Default, action: TetrisAction): TetrisGameState {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ActionType.TETRIS_MOVE:\n        draft.block = action.payload > 0 ? state.block.moveRight() : state.block.moveLeft();\n        break;\n      case ActionType.TETRIS_ROTATE:\n        draft.block = state.block.rotate();\n        break;\n      case ActionType.TETRIS_DESCEND:\n        if (!state.block.shouldLock()) {\n          draft.block = state.block.descend();\n        }\n        break;\n      case ActionType.TETRIS_HARD_DROP:\n        draft.block = state.block.hardDrop();\n        break;\n      case ActionType.TETRIS_NEXT_BLOCK:\n        draft.block = state.nextBlock;\n        draft.nextBlock = Tetromino.nextRandom();\n        break;\n      case ActionType.TETRIS_LINE_MARK_PAUSE:\n        draft.block = Tetromino.dummy;\n        draft.floorCount = draft.floorCount + action.payload.length;\n        break;\n      case ActionType.TETRIS_LINE_CLEAR:\n        draft.floorCount = draft.floorCount > winFLoorCount ? draft.floorCount - winFLoorCount : draft.floorCount;\n        break;\n    }\n  });\n}\n","import { combineEpics } from \"redux-observable\";\nimport { snakeEpic } from \"./snake-epic\";\nimport { tetrisEpic } from \"./tetris-epic\";\n\nexport { SnakeActions } from \"../action/snake-actions\";\nexport { snakeGameReducer } from \"./snake-reducer\";\nexport { tetrisGameReducer } from \"./tetris-reducer\";\nexport { Tetromino } from \"./tetris-tetromino\";\n\nexport const gameEpic = combineEpics(snakeEpic.epic, tetrisEpic.epic);\n","import {filter, tap} from \"rxjs/operators\";\n\nexport const SoundEffects = Object.freeze({\n    sfxCoreMenu: new Audio(\"audio/sfx_core_menu.mp3\"),\n    sfxCoreSelect: new Audio(\"audio/sfx_core_menu_select.mp3\"),\n    sfxKeypress: new Audio(\"audio/sfx_core_keypress.mp3\"),\n    sfxEnterGame: new Audio(\"audio/sfx_core_enter_game.mp3\"),\n    sfxPauseIn: new Audio(\"audio/sfx_core_pause_in.mp3\"),\n    sfxPauseOut: new Audio(\"audio/sfx_core_pause_out.mp3\"),\n    sfxSnakeEatBean: new Audio(\"audio/sfx_snake_eat_bean.mp3\"),\n    sfxSnakeDamage: new Audio(\"audio/sfx_snake_damage.mp3\"),\n    sfxSnakeEscape: new Audio(\"audio/sfx_snake_escape.mp3\"),\n    sfxTetrisLockdown: new Audio(\"audio/sfx_tetris_lockdown2.mp3\"),\n    sfxTetrisLineclear: new Audio(\"audio/sfx_tetris_lineclear.mp3\"),\n});\n\ntype ActionType = import(\"../action\").ActionType;\ntype SO = import(\"redux-observable\").StateObservable<AppState>;\ntype O = import(\"rxjs\").Observable<AppAction>;\n\nexport function createAudioEpic(audio: HTMLAudioElement,\n                                actionFilter: Predicate<AppAction> | ReadonlyArray<ActionType>,\n                                statePredicate: Predicate<AppState> = () => true) {\n    const actionFilterOp = typeof actionFilter === \"function\" ?\n        filter(actionFilter) : filter((a: AppAction) => actionFilter.includes(a.type));\n\n    return (action$: O, state$: SO) => {\n        return action$.pipe(\n            filter(() => state$.value.core.audioEnabled),\n            actionFilterOp,\n            filter(() => statePredicate(state$.value)),\n            tap(() => playAudio(audio)),\n            filter(() => false),\n        );\n    };\n}\n\nfunction playAudio(audio: HTMLAudioElement) {\n    audio.currentTime = 0;\n    return audio.play();\n}\n","import {combineEpics} from \"redux-observable\";\nimport {ActionGroups, ActionType} from \"../action\";\nimport {createAudioEpic, SoundEffects} from \"./audio-types\";\nimport {SystemStatus, GameStatus} from \"src/domain\";\n\nconst menuAudioEpic = createAudioEpic(\n    SoundEffects.sfxCoreMenu,\n    [ActionType.INCREASE_LEVEL, ActionType.DECREASE_LEVEL],\n    s => s.core.status === SystemStatus.MENU\n);\n\nconst selectGameAudioEpic = createAudioEpic(\n    SoundEffects.sfxCoreSelect,\n    [ActionType.TOGGLE_GAME]\n);\n\nconst enterGameAudioEpic = createAudioEpic(SoundEffects.sfxEnterGame, [ActionType.ENTER_GAME]);\n\nconst pauseInAudioEpic = createAudioEpic(\n    SoundEffects.sfxPauseIn,\n    [ActionType.TOGGLE_PAUSE],\n    s => s.core.status === SystemStatus.IN_GAME && s.core.isPaused()\n);\n\nconst pauseOutAudioEpic = createAudioEpic(\n    SoundEffects.sfxPauseOut,\n    [ActionType.TOGGLE_PAUSE],\n    s => s.core.status === SystemStatus.IN_GAME && s.core.gameStatus === GameStatus.RUNNING\n);\n\nconst inGameKeypressAudioEpic = createAudioEpic(\n    SoundEffects.sfxKeypress,\n    ActionGroups.directionKeys,\n    s => s.core.status === SystemStatus.IN_GAME\n);\n\nconst inGamePausedMainkeyAudioEpic = createAudioEpic(\n  SoundEffects.sfxKeypress,\n  ActionGroups.mainKeys,\n  s => s.core.status === SystemStatus.IN_GAME && s.core.gameStatus === GameStatus.PAUSED\n);\n\nconst inGameQuitGameSelectKeyAudioEpic = createAudioEpic(\n  SoundEffects.sfxCoreMenu,\n  [ActionType.SELECT],\n  s => s.core.status === SystemStatus.IN_GAME\n);\n\nexport const coreAudioEpic = combineEpics(\n    menuAudioEpic,\n    selectGameAudioEpic,\n    enterGameAudioEpic,\n    pauseInAudioEpic,\n    pauseOutAudioEpic,\n    inGameKeypressAudioEpic,\n    inGamePausedMainkeyAudioEpic,\n    inGameQuitGameSelectKeyAudioEpic,\n);\n","import { combineEpics } from \"redux-observable\";\nimport { ActionType } from \"../action\";\nimport { createAudioEpic, SoundEffects } from \"./audio-types\";\n\nconst eatBeanAudioEpic = createAudioEpic(\n  SoundEffects.sfxSnakeEatBean,\n  a => a.type === ActionType.SNAKE_CREEP && a.payload.grown\n);\n\nconst damageAudioEpic = createAudioEpic(\n  SoundEffects.sfxSnakeDamage,\n  [ActionType.SNAKE_HIT_WALL, ActionType.SNAKE_BITE_SELF]\n);\n\nconst escapeAudioEpic = createAudioEpic(\n  SoundEffects.sfxSnakeEscape,\n  a => a.type === ActionType.SNAKE_ESCAPE && a.payload === 0\n);\n\nexport const snakeGameAudioEpic = combineEpics(eatBeanAudioEpic, damageAudioEpic, escapeAudioEpic);\n","import { combineEpics } from \"redux-observable\";\nimport { ActionType } from \"../action\";\nimport { createAudioEpic, SoundEffects } from \"./audio-types\";\n\nconst rotateKeypressAudioEpic = createAudioEpic(\n  SoundEffects.sfxKeypress,\n  [ActionType.TETRIS_ROTATE]\n);\n\nconst lockDownAudioEpic = createAudioEpic(\n  SoundEffects.sfxTetrisLockdown,\n  [ActionType.TETRIS_LOCK_DOWN]\n);\n\nconst lineClearAudioEpic = createAudioEpic(\n  SoundEffects.sfxTetrisLineclear,\n  [ActionType.TETRIS_LINE_CLEAR]\n);\n\nexport const tetrisGameAudioEpic = combineEpics(rotateKeypressAudioEpic, lockDownAudioEpic, lineClearAudioEpic);\n","import {combineEpics} from \"redux-observable\";\nimport {coreAudioEpic} from \"./core-audio-epic\";\nimport {snakeGameAudioEpic} from \"./snake-game-audio-epic\";\nimport { tetrisGameAudioEpic } from \"./tetris-game-audio-epic\";\n\nexport const audioEpic = combineEpics(coreAudioEpic, snakeGameAudioEpic, tetrisGameAudioEpic);\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\nimport { gameEpic, snakeGameReducer, tetrisGameReducer } from \"./games\";\nimport { coreEpic, coreReducer } from \"./core\";\nimport { appReducer } from \"./app-reducer\";\nimport { audioEpic } from \"./sound\";\nimport { ActionGroups } from \"./action\";\n\ntype Action = import(\"redux\").Action;\ntype Store<S> = import(\"redux\").Store<S>;\ntype Reducer<S, A> = import(\"redux\").Reducer<S, A>;\n\nconst reducers: Reducer<AppState, Action> = (state, action) => {\n  const combined = combineReducers({\n    core: coreReducer,\n    snake: snakeGameReducer,\n    tetris: tetrisGameReducer,\n  });\n  return appReducer(combined(state, action), action);\n};\n\nconst epics = combineEpics(coreEpic, gameEpic, audioEpic);\nconst epicMiddleware = createEpicMiddleware<Action, Action, AppState>();\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst logger = createLogger({\n  collapsed: true,\n  predicate: (_, action: AppAction) => !ActionGroups.noLogging.includes(action.type),\n});\n\nexport const store: Store<AppState> = createStore(\n  reducers,\n  undefined,\n  composeEnhancers(applyMiddleware(epicMiddleware, logger)),\n);\n\nepicMiddleware.run(epics);\n","import produce from \"immer\";\nimport {SnakeGameState} from \"./games/snake-state\";\nimport {ActionType} from \"./action\";\nimport { TetrisGameState } from \"./games/tetris-state\";\n\nexport function appReducer(state: AppState, action: CoreAction): AppState {\n    return produce(state, draft => {\n        switch (action.type) {\n            case ActionType.EXIT_GAME:\n                draft.snake = SnakeGameState.Default;\n                draft.tetris = TetrisGameState.Default;\n                break;\n        }\n    });\n}\n","import { connect } from \"react-redux\";\nimport { CoreActions } from \"../core\";\n\ntype Dispatch = import(\"redux\").Dispatch;\n\nfunction mapStateToProps(state: AppState): import(\"src/menu\").MenuStateProps {\n  return {\n    audioEnabled: state.core.audioEnabled,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): import(\"src/menu\").MenuActionProps {\n  return {\n    toggleAudio: (enabled: boolean) => enabled ? dispatch(CoreActions.soundDisable()) : dispatch(CoreActions.soundEnable()),\n  };\n}\n\nexport const connectToMenu = connect(mapStateToProps, mapDispatchToProps);\n","import { connect } from \"react-redux\";\nimport { GameType, Life, SystemStatus, PixelState } from \"src/domain\";\nimport { Specs } from \"src/specs\";\nimport { createSelector } from \"reselect\";\nimport { Range } from \"immutable\";\nimport { Graphic } from \"../graphic\";\n\ntype P = import(\"src/console\").DashboardProps;\n\nconst snakeLifeSelector = createSelector(\n  (s: AppState) => s.snake.life,\n  life => ({ hp: life, maxHp: 10 })\n);\n\nconst SmallFrame = Object.freeze({\n  allOff: Range(0, 8).map(() => PixelState.OFF).toList(),\n  allOn: Range(0, 8).map(() => PixelState.ON).toList(),\n});\n\nfunction mapStateToProps(state: AppState): P {\n  let life: Life = Life.Minimal;\n  let enemyLife: Life = Life.Minimal;\n  let score = state.core.getScore();\n  let count = state.core.getCount();\n  let level = state.core.getLevel();\n  let smallFrame = SmallFrame.allOff;\n  if (state.core.status === SystemStatus.STARTING) {\n    life = Life.Full;\n    enemyLife = Life.Full;\n    score = all8digit(Specs.screen.scoreDigitMaxWidth);\n    count = all8digit(Specs.screen.countDigitMaxWidth);\n    smallFrame = SmallFrame.allOn;\n    level = 8;\n  } else if (state.core.status === SystemStatus.IN_GAME) {\n    switch (state.core.gameType) {\n      case GameType.SNAKE:\n        life = snakeLifeSelector(state);\n        break;\n      case GameType.TETRIS:\n        smallFrame = Graphic.drawTetrisSmallMatrix(state.tetris.nextBlock);\n        break;\n      default:\n        throw new TypeError(`Illegal game type:${state.core.gameType}`);\n    }\n  }\n\n  return {\n    score,\n    count,\n    level,\n    life,\n    enemyLife,\n    smallFrame,\n    audioMuted: !state.core.audioEnabled,\n  };\n}\n\nfunction all8digit(width: number) {\n  let sum = 0;\n  for (let i = 0; i < width; i++) {\n    sum += Math.pow(10, i) * 8;\n  }\n  return sum;\n}\n\nexport const connectToDashboard = connect(mapStateToProps);\n","import { connect } from \"react-redux\";\nimport { Graphic } from \"../graphic\";\nimport { Specs } from \"src/specs\";\n\ntype P = import(\"src/console\").MatrixProps;\n\nfunction mapStateToProps(state: AppState): P {\n  return {\n    width: Specs.screen.graphicWidth,\n    height: Specs.screen.graphicHeight,\n    hasBorder: true,\n    pixelSize: 12,\n    frame: Graphic.drawMatrix(state),\n  };\n}\n\nexport const connectToMatrix = connect(mapStateToProps);\n","import { connect } from \"react-redux\";\nimport { KeyboardActions } from \"../core\";\nimport { GameType } from \"src/domain\";\nimport { Specs } from \"src/specs\";\n\ntype P = import(\"src/console\").KeyboardProps;\ntype Dispatch = import(\"redux\").Dispatch;\n\nfunction mapStateToProps(state: AppState): import(\"src/console\").KeyboardThrottleProps {\n  let mainAThrottleInterval: number | undefined;\n  switch (state.core.gameType) {\n    case GameType.TETRIS:\n      mainAThrottleInterval = Specs.tetrisGame.hardDropThrottleIntervalMs;\n      break;\n  }\n  return {\n    mainAThrottleInterval,\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): P => {\n  return {\n    upAction: () => dispatch(KeyboardActions.up),\n    rightAction: () => dispatch(KeyboardActions.right),\n    downAction: () => dispatch(KeyboardActions.down),\n    leftAction: () => dispatch(KeyboardActions.left),\n    selectAction: () => dispatch(KeyboardActions.select),\n    startAction: () => dispatch(KeyboardActions.start),\n    actionA: () => dispatch(KeyboardActions.a),\n    actionB: () => dispatch(KeyboardActions.b),\n  };\n};\n\nexport const connectToKeyboard = connect(mapStateToProps, mapDispatchToProps);\n","import { connectToMenu } from \"./connect-menu\";\nimport { connectToDashboard } from \"./connect-dashboard\";\nimport { connectToMatrix } from \"./connect-matrix\";\nimport { connectToKeyboard } from \"./connect-keyboard\";\n\nexport const Connects = Object.freeze({\n  connectToMenu,\n  connectToDashboard,\n  connectToMatrix,\n  connectToKeyboard,\n});\n","// tslint:disable: max-line-length\nconst info = \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\";\nconst github = `M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z`;\nconst question = \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\";\nconst audio = \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zm233.32-51.08c-11.17-7.33-26.18-4.24-33.51 6.95-7.34 11.17-4.22 26.18 6.95 33.51 66.27 43.49 105.82 116.6 105.82 195.58 0 78.98-39.55 152.09-105.82 195.58-11.17 7.32-14.29 22.34-6.95 33.5 7.04 10.71 21.93 14.56 33.51 6.95C528.27 439.58 576 351.33 576 256S528.27 72.43 448.35 19.97zM480 256c0-63.53-32.06-121.94-85.77-156.24-11.19-7.14-26.03-3.82-33.12 7.46s-3.78 26.21 7.41 33.36C408.27 165.97 432 209.11 432 256s-23.73 90.03-63.48 115.42c-11.19 7.14-14.5 22.07-7.41 33.36 6.51 10.36 21.12 15.14 33.12 7.46C447.94 377.94 480 319.54 480 256zm-141.77-76.87c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 228.28 336 241.63 336 256c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.86z\";\nconst mute = \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zM461.64 256l45.64-45.64c6.3-6.3 6.3-16.52 0-22.82l-22.82-22.82c-6.3-6.3-16.52-6.3-22.82 0L416 210.36l-45.64-45.64c-6.3-6.3-16.52-6.3-22.82 0l-22.82 22.82c-6.3 6.3-6.3 16.52 0 22.82L370.36 256l-45.63 45.63c-6.3 6.3-6.3 16.52 0 22.82l22.82 22.82c6.3 6.3 16.52 6.3 22.82 0L416 301.64l45.64 45.64c6.3 6.3 16.52 6.3 22.82 0l22.82-22.82c6.3-6.3 6.3-16.52 0-22.82L461.64 256z\";\n\nexport const IconSvgPaths = Object.freeze({\n  info, github, question, audio, mute\n});\n","import React from \"react\";\nimport {ScreenColors} from \"../screen-colors\";\nimport styled from \"styled-components\";\nimport { IconSvgPaths } from \"src/svg-path\";\n\nconst svgPath = IconSvgPaths.mute;\n\nexport const StyledSvg = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\ninterface Props {\n    activated: boolean;\n}\n\nexport class VolumeMuteIcon extends React.PureComponent<Props, {}> {\n    public render(): React.ReactNode {\n        return (\n            <StyledSvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path fill={this.props.activated ? ScreenColors.active : ScreenColors.deactivated} d={svgPath}/>\n            </StyledSvg>\n        );\n    }\n}\n","import React from \"react\";\nimport Digit, { FontSize } from \"./digits/digit\";\nimport LifeBar from \"./life-bar\";\nimport { Life, PixelState } from \"src/domain\";\nimport { Connects } from \"src/store\";\nimport { VolumeMuteIcon } from \"./icon/volume-mute-icon\";\nimport styled from \"styled-components\";\nimport { ScreenColors } from \"./screen-colors\";\nimport { Specs } from \"src/specs\";\nimport Matrix from \"./matrix\";\n\nconst SCORE_WIDTH = Specs.screen.scoreDigitMaxWidth;\nconst COUNT_WIDTH = Specs.screen.countDigitMaxWidth;\nconst LEVEL_WIDTH = 1;\nconst LIFE_HEART_COUNT = 10;\n\nexport interface DashboardProps {\n  readonly score: number;\n  readonly count: number;\n  readonly level: number;\n  readonly life: Life;\n  readonly enemyLife: Life;\n  readonly smallFrame: Frame;\n  readonly audioMuted: boolean;\n}\n\ninterface PanelProps {\n  isActive: boolean;\n}\n\nconst heartSize = 10;\nconst indiWidth = 92;\nconst lifeWidth = (heartSize + 4) * 5;\n\nconst DashboardWrapper = styled.div`\n  width: ${indiWidth}px;\n  text-align: right;\n  font-size: 16px;\n  line-height: 16px;\n  padding: 4px;\n\n  > div > p {\n    margin: 6px 2px 6px;\n  }\n`;\n\nconst Panel = styled.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst LifePanel = styled.div`\n  width: ${lifeWidth}px;\n  margin-top: 10px;\n  margin-left: ${indiWidth - lifeWidth}px;\n  color: ${(props: PanelProps) => props.isActive ? ScreenColors.active : ScreenColors.deactivated};\n  > div {\n    right: 0;\n  }\n`;\n\nconst SmallMatrixPanel = styled.div`\n  color: ${(props: PanelProps) => props.isActive ? ScreenColors.active : ScreenColors.deactivated};\n`;\n\nconst MiscPanel = styled.div`\n  margin-top: 20px;\n`;\n\nclass Dashboard extends React.PureComponent<DashboardProps, {}> {\n  public render() {\n    const enemyLife = getLife(this.props.enemyLife);\n    const life = getLife(this.props.life);\n\n    return (\n      <DashboardWrapper>\n        <Panel>\n          <p>Scores</p>\n          <Digit value={this.props.score} width={SCORE_WIDTH} fontSize={FontSize.NORMAL} />\n        </Panel>\n        <Panel>\n          <p>Counts</p>\n          <Digit value={this.props.count} width={COUNT_WIDTH} fontSize={FontSize.NORMAL} />\n        </Panel>\n        <Panel>\n          <p>Level</p>\n          <Digit value={this.props.level} width={LEVEL_WIDTH} fontSize={FontSize.LARGE} />\n        </Panel>\n\n        <LifePanel isActive={enemyLife.maxHp > 0}>\n          <p>Enemy</p>\n          <LifeBar hp={enemyLife.hp} maxHp={enemyLife.maxHp} count={LIFE_HEART_COUNT} />\n        </LifePanel>\n        <LifePanel isActive={life.maxHp > 0}>\n          <p>Life</p>\n          <LifeBar hp={life.hp} maxHp={life.maxHp} count={LIFE_HEART_COUNT} />\n        </LifePanel>\n\n        <SmallMatrixPanel isActive={this.props.smallFrame.includes(PixelState.ON)}>\n          <p>Next</p>\n          <Matrix width={4} height={2} hasBorder={false} frame={this.props.smallFrame} pixelSize={8} />\n        </SmallMatrixPanel>\n        <MiscPanel>\n          <VolumeMuteIcon activated={this.props.audioMuted} />\n        </MiscPanel>\n      </DashboardWrapper>\n    );\n  }\n}\n\nfunction getLife(life?: Life) {\n  if (life === undefined) {\n    return { hp: 0, maxHp: 0 };\n  } else {\n    return life;\n  }\n}\n\nexport default Connects.connectToDashboard(Dashboard); // todo: connect to every indicator?\n","import React from \"react\";\nimport Matrix from \"./matrix\";\nimport Dashboard from \"./dashboard\";\nimport styled from \"styled-components\";\nimport {ScreenColors} from \"./screen-colors\";\nimport { Connects } from \"src/store\";\n\nconst ScreenWrapper = styled.div`\n  flex: 100%;\n  background: ${ScreenColors.background};\n  padding: 4px;\n  border: 1px solid #000;\n  display: flex;\n`;\n\nconst ConnectedMatrix = Connects.connectToMatrix(Matrix);\n\nexport default class Screen extends React.PureComponent {\n    public render() {\n        return (\n            <ScreenWrapper>\n                <ConnectedMatrix/>\n                <Dashboard/>\n            </ScreenWrapper>\n        );\n    }\n}\n","import Screen from \"./screen\";\n\nexport default Screen;\nexport {DashboardProps} from \"./dashboard\";\nexport {MatrixProps} from \"./matrix\";\n","import {css} from \"styled-components\";\nimport darken from \"polished/lib/color/darken\";\nimport lighten from \"polished/lib/color/lighten\";\nimport transparentize from \"polished/lib/color/transparentize\";\n\nconst BasicColor = Object.freeze({\n    blue: \"#108FE8\",\n    yellow: \"#FFC334\",\n    red: \"#E53030\",\n    green: \"#0EC518\",\n    black: \"#1b1b1b\",\n});\n\nconst btnColor = BasicColor.blue;\n\nconst Color = Object.freeze({\n    darken40: darken(0.4, btnColor),\n    transparentDarken40: transparentize(0.8, darken(0.4, btnColor)),\n    darken20: darken(0.2, btnColor),\n    darken13: darken(0.13, btnColor),\n    darken10: darken(0.1, btnColor),\n    lighten20: lighten(0.2, btnColor),\n    lighten15: lighten(0.15, btnColor),\n    transparentWhite : transparentize(0.83, \"#ffffff\")\n});\n\nconst fissureBorder = `${BasicColor.black} solid 2px`;\n\nconst ButtonBasicCss = css`\n  border: ${fissureBorder};\n  cursor: pointer;\n  display: inline-block;\n  background: ${btnColor};\n`;\n\nconst mainDiameter = 80;\nconst MainButtonCss = css`\n  ${ButtonBasicCss};\n  border-radius: 100%;\n  box-shadow: 0 -2px 1px 2px ${Color.darken10} inset,\n              0 4px 3px ${Color.transparentDarken40},\n              0 4px 3px ${Color.transparentWhite} inset;\n\n  height: ${mainDiameter}px;\n  width: ${mainDiameter}px;\n  margin: 20px;\n\n  font-size: ${mainDiameter / 2}px;\n  text-decoration: none;\n  font-weight: bold;\n  color: ${Color.darken20};\n  text-shadow: 0 -2px 0 ${Color.darken20}, 0 1px 1px ${Color.lighten15};\n  line-height: ${mainDiameter}px;\n  text-align: center;\n  &:active {\n    box-shadow: 0 -2px 2px 2px ${Color.darken13} inset;\n    text-shadow: 0 -2px 0 ${Color.darken20}, 0 1px 1px ${Color.lighten15};\n  }\n`;\n\nconst FuncButtonCss = css`\n  ${ButtonBasicCss};\n  border-radius: 7px;\n  box-shadow: 0 -2px 1px 1px ${Color.darken10} inset,\n              0 3px 3px ${Color.transparentDarken40},\n              0 3px 2px ${Color.transparentWhite} inset;\n  height: 12px;\n  width: 40px;\n  &:active {\n    box-shadow: 0 -2px 2px 1px ${Color.darken13} inset;\n  }\n`;\n\nconst arrowSize = 45;\nconst triangleSize = Math.sqrt(arrowSize * arrowSize / 2) + 2;\nconst ArrowButtonCss = css`\n  ${ButtonBasicCss};\n  height: ${arrowSize}px;\n  width: ${arrowSize}px;\n  margin: 10px 20px 10px;\n  position: relative;\n  border-radius: 2px;\n  &:after {\n    cursor: pointer;\n    \n    width: ${triangleSize}px;\n    height: ${triangleSize}px;\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    background: ${btnColor};\n    border-radius: 2px;\n  }\n  &:active {\n    box-shadow: none;\n    &:after {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst UpButtonCss = css`\n  ${ArrowButtonCss};\n  border-bottom: none;\n  box-shadow: -3px 0 4px -1px ${Color.darken10} inset,\n              2px 5px 5px -2px ${Color.transparentWhite} inset;\n  &:after {\n    left: -2.5px;\n    bottom: 0;\n    transform-origin: 0 100%;\n    transform: rotate(45deg);\n    border-bottom: ${fissureBorder};\n    border-right: ${fissureBorder};\n    box-shadow: -3px -3px 4px -1px ${Color.darken10} inset,\n                4px 3px 4px -2px ${Color.transparentDarken40},\n                0 2.5px 2px -1px ${Color.transparentWhite} inset;\n  }\n`;\n\nconst LeftButtonCss = css`\n  ${ArrowButtonCss};\n  border-right: none;\n  box-shadow: 0 -3px 2px -1px ${Color.darken10} inset,\n              0px 6px 3px -3px ${Color.transparentDarken40},\n              3px 5px 3px -2px ${Color.transparentWhite} inset;\n  &:after {\n    right: 0;\n    bottom: -2.5px;\n    transform-origin: 100% 100%;\n    transform: rotate(45deg);\n    border-top: ${fissureBorder};\n    border-right: ${fissureBorder};\n    box-shadow: -4px 0 3px -2px ${Color.darken10} inset,\n                4px 0 4px -2px ${Color.transparentDarken40},\n                0 2.5px 2px -1px ${Color.transparentWhite} inset;\n  }\n`;\n\nconst DownButtonCss = css`\n  ${ArrowButtonCss};\n  border-top: none;\n  box-shadow: -3px -3px 2px -1px ${Color.darken10} inset,\n              0px 5px 4px -2px ${Color.transparentDarken40},\n              3px 0px 3px -2px ${Color.transparentWhite} inset;\n  &:after {\n    left: -2.5px;\n    top: 0;\n    transform-origin: 0 0;\n    transform: rotate(-45deg);\n    border-top: ${fissureBorder};\n    border-right: ${fissureBorder};\n    box-shadow: -3px 3px 2px -1px ${Color.transparentWhite} inset;\n  }\n`;\n\nconst RightButtonCss = css`\n  ${ArrowButtonCss};\n  border-left: none;\n  box-shadow: 0 -3px 2px -1px ${Color.darken10} inset,\n              0px 6px 4px -3px ${Color.transparentDarken40},\n              0px 5px 3px -2px ${Color.transparentWhite} inset;\n\n  &:after {\n    left: 0;\n    bottom: -2.5px;\n    transform-origin: 0 100%;\n    transform: rotate(-45deg);\n    border-top: ${fissureBorder};\n    border-left: ${fissureBorder};\n    box-shadow: 4px 0 2px -2px ${Color.darken10} inset,\n                -2px 0 2px -1px ${Color.transparentDarken40},\n                0 3px 2px -1px ${Color.transparentWhite} inset;\n  }\n`;\n\nexport const enum BtnType {\n    MAIN = \"main\",\n    FUNC = \"func\",\n    UP = \"up\",\n    LEFT = \"left\",\n    RIGHT = \"right\",\n    DOWN = \"down\"\n}\n\nexport const mapStyledButton = (btnType: BtnType): import(\"styled-components\").FlattenSimpleInterpolation => {\n    switch (btnType) {\n        case BtnType.MAIN:\n            return MainButtonCss;\n        case BtnType.FUNC:\n            return FuncButtonCss;\n        case BtnType.UP:\n            return UpButtonCss;\n        case BtnType.LEFT:\n            return LeftButtonCss;\n        case BtnType.DOWN:\n            return DownButtonCss;\n        case BtnType.RIGHT:\n            return RightButtonCss;\n    }\n};\n\nexport const ButtonStyles = {\n    arrayKeySize: arrowSize,\n};\n","import React from \"react\";\nimport autoBind from \"auto-bind\";\nimport styled from \"styled-components\";\nimport { mapStyledButton } from \"./button-styles\";\n\ntype BtnType = import(\"./button-styles\").BtnType;\n\ninterface Props {\n  type: BtnType;\n  caption?: string;\n  downHandler?: () => void;\n  upHandler?: () => void;\n  actionHandler?: () => void;\n  keyboardCode?: string;\n}\n\nconst StyledButton = styled.div`\n  ${(props: Props) => mapStyledButton(props.type)};\n`;\n\nexport default class Button extends React.Component<Props, {}> {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  constructor(props: Props) {\n    super(props);\n    if (typeof props.downHandler !== typeof props.upHandler) {\n      throw ReferenceError(\"downHandler and upHandler must be both absent or both present.\");\n    }\n    autoBind.react(this);\n    if (props.keyboardCode && props.actionHandler) {\n      addKeyboardEventListener(props.keyboardCode, props.actionHandler);\n    }\n  }\n\n  public render() {\n    return (\n      <StyledButton\n        type={this.props.type}\n        onMouseDown={this.handleDown}\n        onMouseUp={this.handleUp}\n        onClick={this.props.actionHandler}\n        onTouchStart={this.handleTouch}\n        onTouchEnd={this.preventTouchend}\n      >\n        {this.props.caption}\n      </StyledButton>\n    );\n  }\n\n  private preventTouchend(e: React.TouchEvent) {\n    e.preventDefault();\n    this.handleUp();\n  }\n\n  private handleTouch(e: React.TouchEvent) {\n    if (this.props.actionHandler) {\n      e.preventDefault();\n      this.props.actionHandler();\n      this.handleDown(e);\n    }\n  }\n\n  private handleDown(e: React.SyntheticEvent) {\n    if (this.props.downHandler) {\n      e.preventDefault();\n      this.props.downHandler();\n      document.addEventListener(\"mouseup\", this.handleUp);\n    }\n  }\n\n  private handleUp() {\n    if (this.props.upHandler) {\n      document.removeEventListener(\"mouseup\", this.handleUp);\n      this.props.upHandler();\n    }\n  }\n}\n\nfunction addKeyboardEventListener(code: string, keypressHandler: () => void) {\n  document.addEventListener(\"keypress\", (ev: KeyboardEvent) => {\n    if (ev.code === code) { keypressHandler(); }\n  });\n}\n","import autoBind from \"auto-bind\";\nimport { List } from \"immutable\";\nimport throttle from \"lodash.throttle\";\nimport React from \"react\";\nimport { Specs } from \"src/specs\";\nimport Button from \"./button\";\nimport { BtnType } from \"./button-styles\";\n\nconst DEFAULT_THROTTLE_INTERVAL = Specs.core.defaultButtonThrottleIntervalMs;\n\ninterface Props {\n  type: BtnType;\n  caption?: string;\n  keyboardCode?: string;\n  action: () => void;\n  throttleIntervalMs?: number;\n}\n\ninterface State {\n  handles: List<number>;\n}\n\nexport default class ActionButton extends React.Component<Props, State> {\n\n  private readonly throttleInterval: number;\n  private readonly throttledDispatch: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.throttleInterval = props.throttleIntervalMs ? props.throttleIntervalMs : DEFAULT_THROTTLE_INTERVAL;\n    this.state = { handles: List() };\n    this.throttledDispatch = throttle(this.props.action, this.throttleInterval, { trailing: false });\n    autoBind.react(this);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render(): React.ReactNode {\n    return (\n      <Button\n        type={this.props.type}\n        caption={this.props.caption}\n        actionHandler={this.throttledDispatch}\n        downHandler={this.fireOn}\n        upHandler={this.fireOff}\n        keyboardCode={this.props.keyboardCode}\n      />\n    );\n  }\n\n  private fireOn() {\n    const handle = window.setInterval(this.throttledDispatch, this.throttleInterval);\n    this.setState(prevState => ({ handles: prevState.handles.push(handle) }));\n  }\n\n  private fireOff() {\n    this.state.handles.forEach(window.clearInterval);\n    this.setState({ handles: List() });\n  }\n}\n","import styled from \"styled-components\";\n\nconst KeysContainer: import(\"styled-components\").StyledComponent<\"div\", any> = styled.div`\n  position: relative;\n  > div {\n    position: absolute;\n  }\n`;\n\nexport default KeysContainer;\n","import React from \"react\";\nimport { BtnType } from \"./button-styles\";\nimport Button from \"./action-button\";\nimport styled from \"styled-components\";\nimport KeysContainer from \"./keys-container\";\nimport { ButtonStyles } from \"./button-styles\";\nimport { Key } from \"./key-code\";\n\ninterface Props {\n  upAction: () => void;\n  rightAction: () => void;\n  downAction: () => void;\n  leftAction: () => void;\n}\n\nconst baseTop = ButtonStyles.arrayKeySize * 1.2;\nconst baseLeft = ButtonStyles.arrayKeySize * 1.2;\nconst UpKeyContainer = styled.div`\n  left: ${baseLeft}px;\n`;\nconst RightKeyContainer = styled.div`\n  top: ${baseTop}px;\n  left: ${baseLeft * 2.1}px;\n`;\nconst DownKeyContainer = styled.div`\n  top: ${baseTop * 2}px;\n  left: ${baseLeft}px;\n`;\nconst LeftKeyContainer = styled.div`\n  top: ${baseTop}px;\n`;\n\nexport default class extends React.PureComponent<Props, {}> {\n  public render() {\n    return (\n      <KeysContainer>\n        <UpKeyContainer>\n          <Button type={BtnType.UP} action={this.props.upAction} keyboardCode={Key.W} />\n        </UpKeyContainer>\n        <RightKeyContainer>\n          <Button type={BtnType.RIGHT} action={this.props.rightAction} keyboardCode={Key.D} />\n        </RightKeyContainer>\n        <DownKeyContainer>\n          <Button type={BtnType.DOWN} action={this.props.downAction} keyboardCode={Key.S} />\n        </DownKeyContainer>\n        <LeftKeyContainer>\n          <Button type={BtnType.LEFT} action={this.props.leftAction} keyboardCode={Key.A} />\n        </LeftKeyContainer>\n      </KeysContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport { BtnType } from \"./button-styles\";\nimport Button from \"./action-button\";\nimport KeysContainer from \"./keys-container\";\nimport styled, { css } from \"styled-components\";\nimport { Key } from \"./key-code\";\n\ninterface Props {\n  selectAction: () => void;\n  startAction: () => void;\n}\n\nconst BaseFuncKeyCss = css`\n  font-size: 12px;\n  font-weight: bold;\n  p {\n    margin: 5px;\n  }\n`;\n\nconst SelectKeyContainer = styled.div`\n  ${BaseFuncKeyCss};\n`;\nconst StartKeyContainer = styled.div`\n  ${BaseFuncKeyCss};\n  left: 60px;\n`;\n\nexport default class FuncKeys extends React.PureComponent<Props, {}> {\n  public render() {\n    return (\n      <KeysContainer>\n        <SelectKeyContainer>\n          <Button type={BtnType.FUNC} action={this.props.selectAction} throttleIntervalMs={300} keyboardCode={Key.One} />\n          <p>Select</p>\n        </SelectKeyContainer>\n        <StartKeyContainer>\n          <Button type={BtnType.FUNC} action={this.props.startAction} throttleIntervalMs={300} keyboardCode={Key.Two} />\n          <p>Start</p>\n        </StartKeyContainer>\n      </KeysContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"./action-button\";\nimport { BtnType } from \"./button-styles\";\nimport styled from \"styled-components\";\nimport KeysContainer from \"./keys-container\";\nimport { Key } from \"./key-code\";\n\ninterface Props {\n  actionA: () => void;\n  actionB: () => void;\n  throttleIntervalA?: number;\n  throttleIntervalB?: number;\n}\n\nconst KeyAContainer = styled.div`\n  left: 90px;\n`;\nconst KeyBContainer = styled.div`\n  top: 50px;\n`;\n\nclass MainKeys extends React.PureComponent<Props, {}> {\n  public render() {\n    return (\n      <KeysContainer>\n        <KeyAContainer>\n          <Button\n            type={BtnType.MAIN}\n            caption={\"A\"}\n            action={this.props.actionA}\n            throttleIntervalMs={this.props.throttleIntervalA}\n            keyboardCode={Key.K}\n          />\n        </KeyAContainer>\n        <KeyBContainer>\n          <Button\n            type={BtnType.MAIN}\n            caption={\"B\"}\n            action={this.props.actionB}\n            throttleIntervalMs={this.props.throttleIntervalB}\n            keyboardCode={Key.J}\n          />\n        </KeyBContainer>\n      </KeysContainer>\n    );\n  }\n}\n\nexport default MainKeys;\n","import React from \"react\";\nimport ArrowKeys from \"./arrow-keys\";\nimport FunctionKeys from \"./func-keys\";\nimport MainKeys from \"./main-keys\";\nimport { Connects } from \"src/store/connects\";\nimport styled from \"styled-components\";\n\nexport interface KeyboardProps {\n  readonly upAction: () => void;\n  readonly rightAction: () => void;\n  readonly downAction: () => void;\n  readonly leftAction: () => void;\n\n  readonly selectAction: () => void;\n  readonly startAction: () => void;\n\n  readonly actionA: () => void;\n  readonly actionB: () => void;\n}\n\nexport interface KeyboardThrottleProps {\n  readonly mainAThrottleInterval?: number;\n  readonly mainBThrottleInterval?: number;\n}\n\nconst KeyboardWrapper = styled.div`\n  position: relative;\n  > div {\n    position: absolute;\n  }\n`;\n\nconst ArrowKeysContainer = styled.div`\n  top: 30px;\n`;\n\nconst FuncKeysContainer = styled.div`\n  left: 170px;\n`;\n\nconst MainKeysContainer = styled.div`\n  left: 220px;\n  top: 30px;\n`;\n\nclass Keyboard extends React.PureComponent<KeyboardProps & KeyboardThrottleProps, {}> {\n  constructor(props: KeyboardProps) {\n    super(props);\n  }\n\n  public render() { // todo: try to remove container\n    const p = this.props;\n    return (\n      <KeyboardWrapper>\n        <ArrowKeysContainer>\n          <ArrowKeys upAction={p.upAction} rightAction={p.rightAction} downAction={p.downAction} leftAction={p.leftAction} />\n        </ArrowKeysContainer>\n        <FuncKeysContainer>\n          <FunctionKeys selectAction={p.selectAction} startAction={p.startAction} />\n        </FuncKeysContainer>\n        <MainKeysContainer>\n          <MainKeys\n            actionA={p.actionA} actionB={p.actionB}\n            throttleIntervalA={this.props.mainAThrottleInterval}\n            throttleIntervalB={this.props.mainBThrottleInterval}\n          />\n        </MainKeysContainer>\n      </KeyboardWrapper>\n    );\n  }\n}\n\nexport default Connects.connectToKeyboard(Keyboard);\n","import Keyboard from \"./keyboard\";\n\nexport default Keyboard;\nexport { KeyboardProps, KeyboardThrottleProps } from \"./keyboard\";\n","import React from \"react\";\nimport Decorate from \"./decorate\";\nimport Screen from \"./screen\";\nimport Keyboard from \"./keyboard\";\nimport styled from \"styled-components\";\nimport rgb from \"polished/lib/color/rgb\";\nimport autoBind from \"auto-bind\";\n\nconst panelPrimary = \"lightskyblue\";\nconst panelBright = rgb(172, 222, 255);\nconst panelDark = \"#5f92bd\";\n\ninterface StyleProps {\n  scale: number;\n}\n\nconst ConsoleWrapper = styled.div`\n  width: 480px;\n  position: absolute;\n  padding-top: 50px;\n  z-index: -2;\n  top:5px;\n\n  background: ${panelPrimary};\n  border: outset 3px ${panelPrimary};\n  border-radius: 10px;\n\n  user-select: none;\n\n  transform: scale(${(props: StyleProps) => props.scale});\n  transform-origin: top center;\n`;\n\nconst UpperRect = styled.div`\n  width: 380px;\n  padding: 28px 0 16px;\n  border: #000 solid;\n  border-width: 0 6px 6px;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst ScreenRect = styled.div`\n  width: 340px;\n  border: solid 5px;\n  border-color: ${panelDark} ${panelBright} ${panelBright} ${panelDark};\n  margin: 0 auto;\n  position: relative;\n  display: flex;\n`;\n\nconst LowerRect = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 300px;\n  position: relative;\n  margin-top: 20px;\n  padding: 20px;\n  z-index: 1;\n`;\n\ntype State = StyleProps;\n\nexport default class Console extends React.PureComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { scale: 1.0 };\n    autoBind.react(this);\n  }\n\n  componentDidMount() {\n    this.scaleUI();\n    window.addEventListener(\"resize\", this.scaleUI);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.scaleUI);\n  }\n\n  public render() {\n    return (\n      <ConsoleWrapper scale={this.state.scale} id=\"console\">\n        <UpperRect>\n          <Decorate />\n          <ScreenRect>\n            <Screen />\n          </ScreenRect>\n        </UpperRect>\n        <LowerRect>\n          <Keyboard />\n        </LowerRect>\n      </ConsoleWrapper>\n    );\n  }\n\n  private scaleUI() {\n    const scale = Math.min(\n      window.innerWidth / 500,\n      window.innerHeight / 865\n    );\n    this.setState({ scale });\n  }\n}\n","import Console from \"./console\";\n\nexport default Console;\nexport { KeyboardProps, KeyboardThrottleProps } from \"./keyboard\";\nexport { DashboardProps, MatrixProps } from \"./screen\";\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DEFAULT_SIZE = 24;\n\ninterface StyleProps {\n  size?: number;\n}\n\ninterface Props {\n  svgPath: string;\n  onClickHandler?: () => void;\n}\n\nconst StyledSvg = styled.svg`\n  width: ${getSize}px;\n  cursor: pointer;\n  margin: 3px;\n`;\n\nexport default class MenuIcon extends React.PureComponent<Props & StyleProps, {}> {\n  public render(): React.ReactNode {\n    return (\n      <StyledSvg onClick={this.props.onClickHandler} size={this.props.size}\n        xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n        <path fill={\"rgba(255, 255, 255, 0.5)\"} d={this.props.svgPath} />\n      </StyledSvg>\n    );\n  }\n}\n\nfunction getSize(props: StyleProps) {\n  return props.size ? props.size : DEFAULT_SIZE;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport autoBind from \"auto-bind\";\n\nconst StyledDiv = styled.div`\n  color: #9c9c9c;\n  font-size: 0.8em;\n  font-family: monospace;\n`;\n\nconst version: string = process.env.PACKAGE_VERSION as string;\n\ninterface UiInfo {\n  uiWidth: number;\n  uiHeight: number;\n}\n\ntype State = UiInfo;\n\nexport default class Info extends React.PureComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.state = this.getUiInfo();\n    autoBind.react(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateUiInfo);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateUiInfo);\n  }\n\n  public render() {\n    return (\n      <StyledDiv>\n        <p>UI-version:{version}</p>\n        <p>Author:Cause Chung</p>\n        <p><span>window size:{this.state.uiWidth}x{this.state.uiHeight}</span></p>\n      </StyledDiv>\n    );\n  }\n\n  private updateUiInfo() {\n    this.setState(this.getUiInfo());\n  }\n\n  private getUiInfo(): UiInfo {\n    return {\n      uiWidth: window.innerWidth,\n      uiHeight: window.innerHeight\n    };\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Connects } from \"../store\";\nimport autoBind from \"auto-bind\";\nimport MenuIcon from \"./menu-icon\";\nimport { IconSvgPaths } from \"../svg-path\";\nimport Info from \"./info\";\n\nexport interface MenuStateProps {\n  audioEnabled: boolean;\n}\n\nexport interface MenuActionProps {\n  toggleAudio: (enabled: boolean) => void;\n}\n\ninterface State {\n  infoExpanded: boolean;\n}\nconst DEFAULT_STATE = { infoExpanded: false };\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center; \n  flex-direction: column;\n  position: fixed;\n  z-index: 100;\n  width: ${(props: State) => props.infoExpanded ? \"100%\" : \"0\"};\n  height: ${(props: State) => props.infoExpanded ? \"100%\" : \"0\"};\n  margin: 0;\n  padding: 0;\n  top:2px;\n  right:2px;\n  background-color:rgba(0,0,0,0.6);\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position:absolute;\n  right:0;\n  top:0;\n`;\n\nconst repoUrl = process.env.REPOSITORY_URL as string;\n\ntype Props = MenuStateProps & MenuActionProps;\nclass Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = DEFAULT_STATE;\n    autoBind.react(this);\n  }\n\n  public render() {\n    const audioSvnPath = this.props.audioEnabled ? IconSvgPaths.audio : IconSvgPaths.mute;\n    return (\n      <Container infoExpanded={this.state.infoExpanded} onClick={this.closeInfo}>\n        <IconContainer>\n          <a href={repoUrl} target={\"_blank\"}><MenuIcon svgPath={IconSvgPaths.github} /></a>\n          <MenuIcon svgPath={audioSvnPath} onClickHandler={this.toggleAudio} size={22} />\n          <MenuIcon svgPath={IconSvgPaths.question} onClickHandler={this.toggleInfo} />\n        </IconContainer>\n        {this.state.infoExpanded ? <Info /> : null}\n      </Container>\n    );\n  }\n\n  private toggleInfo() {\n    const nextState = { infoExpanded: !this.state.infoExpanded };\n    this.setState(nextState);\n  }\n\n  private closeInfo() {\n    if (this.state.infoExpanded) {\n      this.setState(DEFAULT_STATE);\n    }\n  }\n\n  private toggleAudio() {\n    this.props.toggleAudio(this.props.audioEnabled);\n  }\n}\n\nexport default Connects.connectToMenu(Menu);\n","import React from \"react\";\nimport Console from \"../console\";\nimport Menu from \"../menu/menu\";\nimport styled from \"styled-components\";\n\nconst StyledAppWrapper = styled.div`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default class App extends React.PureComponent {\n    public render() {\n        return (\n            <StyledAppWrapper>\n                <Menu/>\n                <Console/>\n            </StyledAppWrapper>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport { Provider } from \"react-redux\";\nimport { store, initiateConsole } from \"../store\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: #060816;\n    font: 20px/1 \"HanHei SC\",\"PingHei\",\"PingFang SC\",\"STHeitiSC-Light\",\"Helvetica Neue\",\"Helvetica\",\"Arial\",sans-serif;\n    text-rendering: optimizeLegibility;\n    touch-action: manipulation;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}><GlobalStyle /><App /></Provider>,\n  (document.getElementById(\"root\") as HTMLElement)\n);\ninitiateConsole();\n","import {CoreActions} from \"./action\";\nimport {store} from \"./app-state\";\n\nexport {store} from \"./app-state\";\nexport {Connects} from \"./connects\";\nexport const initiateConsole = () => store.dispatch(CoreActions.consoleStart());\n"],"sourceRoot":""}